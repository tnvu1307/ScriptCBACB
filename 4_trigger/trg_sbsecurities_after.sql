SET DEFINE OFF;
CREATE OR REPLACE TRIGGER TRG_SBSECURITIES_AFTER 
 AFTER
  INSERT OR DELETE OR UPDATE
 ON sbsecurities
REFERENCING NEW AS NEWVAL OLD AS OLDVAL
 FOR EACH ROW
DECLARE
    -- PRIVATE VARIABLE DECLARATIONS
  PKGCTX PLOG.LOG_CTX;
  L_ACTION VARCHAR2(20);
  L_DATA VARCHAR2(4000);
BEGIN
    --DONG BO DU LIEU SANG FA
    IF UPDATING THEN
        L_ACTION := 'EDIT';
        --IF :NEWVAL.SYMBOL NOT LIKE '%_WFT%' THEN
        INSERT INTO LOG_NOTIFY_CBFA(GLOBALID,AUTOID,OBJNAME,KEYNAME,KEYVALUE,ACTION,TXNUM,TXDATE,TLTXCD,LOGTIME)
        VALUES ('CB.SBSECURITIES.'||:NEWVAL.CODEID,SEQ_LOG_NOTIFY_CBFA.NEXTVAL,'SBSECURITIES','SYMBOL',:NEWVAL.SYMBOL,L_ACTION,NULL,GETCURRDATE(),NULL,SYSDATE);
        --END IF;
        IF :OLDVAL.SYMBOL <> :NEWVAL.SYMBOL THEN
            UPDATE BONDISSUE SET BONDSYMBOL = :NEWVAL.SYMBOL WHERE BONDCODE = :NEWVAL.CODEID;
            UPDATE BONDSEMAST SET BONDSYMBOL = :NEWVAL.SYMBOL WHERE BONDCODE = :NEWVAL.CODEID;
        END IF;

        IF :NEWVAL.TRADEPLACE IN ('003', '099') AND (
           :OLDVAL.PARVALUE <> :NEWVAL.PARVALUE OR
           :OLDVAL.ISSUEDATE <> :NEWVAL.ISSUEDATE OR
           :OLDVAL.EXPDATE <> :NEWVAL.EXPDATE OR
           :OLDVAL.PERIODINTEREST <> :NEWVAL.PERIODINTEREST OR
           :OLDVAL.INTCOUPON <> :NEWVAL.INTCOUPON OR
           :OLDVAL.INTERESTDATE <> :NEWVAL.INTERESTDATE OR
           :OLDVAL.PAYMENTHOLIDAY <> :NEWVAL.PAYMENTHOLIDAY) THEN

            L_DATA := '{';
            L_DATA := L_DATA || '"CODEID":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.CODEID) || '",';
            L_DATA := L_DATA || '"PARVALUE":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.PARVALUE) || '",';
            L_DATA := L_DATA || '"ISSUEDATE":"' || TRANSFORM_PARAMETER_JSON(TO_CHAR(:NEWVAL.ISSUEDATE, 'DD/MM/RRRR')) || '",';
            L_DATA := L_DATA || '"EXPDATE":"' || TRANSFORM_PARAMETER_JSON(TO_CHAR(:NEWVAL.EXPDATE, 'DD/MM/RRRR')) || '",';
            L_DATA := L_DATA || '"PERIODINTEREST":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.PERIODINTEREST) || '",';
            L_DATA := L_DATA || '"INTCOUPON":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.INTCOUPON) || '",';
            L_DATA := L_DATA || '"INTERESTDATE":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.INTERESTDATE) || '",';
            L_DATA := L_DATA || '"PAYMENTHOLIDAY":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.PAYMENTHOLIDAY) || '"';
            L_DATA := L_DATA || '}';

            PRC_BOND_PAYMENT_SCHEDULE(L_DATA);
        END IF;
    ELSIF INSERTING THEN
        IF :NEWVAL.TRADEPLACE IN ('003', '099') THEN
            L_DATA := '{';
            L_DATA := L_DATA || '"CODEID":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.CODEID) || '",';
            L_DATA := L_DATA || '"PARVALUE":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.PARVALUE) || '",';
            L_DATA := L_DATA || '"ISSUEDATE":"' || TRANSFORM_PARAMETER_JSON(TO_CHAR(:NEWVAL.ISSUEDATE, 'DD/MM/RRRR')) || '",';
            L_DATA := L_DATA || '"EXPDATE":"' || TRANSFORM_PARAMETER_JSON(TO_CHAR(:NEWVAL.EXPDATE, 'DD/MM/RRRR')) || '",';
            L_DATA := L_DATA || '"PERIODINTEREST":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.PERIODINTEREST) || '",';
            L_DATA := L_DATA || '"INTCOUPON":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.INTCOUPON) || '",';
            L_DATA := L_DATA || '"INTERESTDATE":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.INTERESTDATE) || '",';
            L_DATA := L_DATA || '"PAYMENTHOLIDAY":"' || TRANSFORM_PARAMETER_JSON(:NEWVAL.PAYMENTHOLIDAY) || '"';
            L_DATA := L_DATA || '}';

            PRC_BOND_PAYMENT_SCHEDULE(L_DATA);
        END IF;
    ELSIF DELETING THEN
        L_ACTION := 'DELETE';
        --IF :OLDVAL.SYMBOL NOT LIKE '%_WFT%' THEN
        INSERT INTO LOG_NOTIFY_CBFA(GLOBALID,AUTOID,OBJNAME,KEYNAME,KEYVALUE,ACTION,TXNUM,TXDATE,TLTXCD,LOGTIME)
        VALUES ('CB.SBSECURITIES.'|| :NEWVAL.CODEID,SEQ_LOG_NOTIFY_CBFA.NEXTVAL,'SBSECURITIES','SYMBOL',:OLDVAL.SYMBOL,L_ACTION,NULL,GETCURRDATE(),NULL,SYSDATE);
        --END IF;
    END IF  ;

EXCEPTION WHEN OTHERS THEN
    PLOG.ERROR(PKGCTX, SQLERRM);
    PLOG.SETENDSECTION(PKGCTX, 'TRG_SBSECURITIES_AFTER');
END TRG_SECURITIES_AFTER;
/
