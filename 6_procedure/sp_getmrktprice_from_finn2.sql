SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE SP_GETMRKTPRICE_FROM_FINN2 (P_TICKER IN VARCHAR2)
IS
  V_SRCMRKDATA VARCHAR2(50);
  PKGCTX   PLOG.LOG_CTX;
BEGIN
    PLOG.SETBEGINSECTION(PKGCTX, 'SP_GETMRKTPRICE_FROM_FINN2');

    V_SRCMRKDATA := 'STX';

    FOR REC IN (
        SELECT * FROM
        (
            SELECT DISTINCT 'ST' STOCKTYP, ORGANCODE ORGANCD, 'HSX' EXCHCD, TICKER, TRADINGDATE, HIGHESTPRICE HPRICE, LOWESTPRICE LPRICE, OPENPRICE OPRICE, CLOSEPRICEADJUSTED CPRICE, TOTALMATCHVOLUME VOL, TO_DATE(TRUNC(UPDATEDATE)) UPDATEDATE
            FROM HOSESTOCK@LINKFIIN
            WHERE TICKER = P_TICKER
            UNION ALL
            SELECT DISTINCT 'ST' STOCKTYP, ORGANCODE ORGANCD, 'HNX' EXCHCD, TICKER, TRADINGDATE, HIGHESTPRICE HPRICE, LOWESTPRICE LPRICE, OPENPRICE OPRICE, CLOSEPRICEADJUSTED CPRICE, TOTALMATCHVOLUME VOL, TO_DATE(TRUNC(UPDATEDATE)) UPDATEDATE
            FROM HNXSTOCK@LINKFIIN
            WHERE TICKER = P_TICKER
            UNION ALL
            SELECT DISTINCT 'ST' STOCKTYP, ORGANCODE ORGANCD, 'UPCOM' EXCHCD, TICKER, TRADINGDATE, HIGHESTPRICE HPRICE, LOWESTPRICE LPRICE, OPENPRICE OPRICE, CLOSEPRICEADJUSTED CPRICE, TOTALMATCHVOLUME VOL, TO_DATE(TRUNC(UPDATEDATE)) UPDATEDATE
            FROM UPCOMSTOCK@LINKFIIN
            WHERE TICKER = P_TICKER
            UNION ALL
            SELECT DISTINCT 'IX' STOCKTYP, 'EXCH' ORGANCD, 'HSX' EXCHCD, COMGROUPCODE TICKER, TRADINGDATE, HIGHESTINDEX HPRICE, LOWESTINDEX LPRICE, OPENINDEX OPRICE, CLOSEINDEX CPRICE, TOTALMATCHVOLUME VOL, TO_DATE(TRUNC(UPDATEDATE)) UPDATEDATE
            FROM HOSEINDEX@LINKFIIN
            WHERE COMGROUPCODE = P_TICKER
            UNION ALL
            SELECT DISTINCT 'IX' STOCKTYP, 'EXCH' ORGANCD, 'HNX' EXCHCD, COMGROUPCODE TICKER, TRADINGDATE, HIGHESTINDEX HPRICE, LOWESTINDEX LPRICE, OPENINDEX OPRICE, CLOSEINDEX CPRICE, TOTALMATCHVOLUME VOL, TO_DATE(TRUNC(UPDATEDATE)) UPDATEDATE
            FROM HNXINDEX@LINKFIIN
            WHERE COMGROUPCODE = P_TICKER
            UNION ALL
            SELECT DISTINCT 'IX' STOCKTYP, 'EXCH' ORGANCD, 'UPCOM' EXCHCD, COMGROUPCODE TICKER, TRADINGDATE, HIGHESTINDEX HPRICE, LOWESTINDEX LPRICE, OPENINDEX OPRICE, CLOSEINDEX CPRICE, TOTALMATCHVOLUME VOL, TO_DATE(TRUNC(UPDATEDATE)) UPDATEDATE
            FROM UPCOMINDEX@LINKFIIN
            WHERE COMGROUPCODE = P_TICKER
            UNION ALL
            SELECT DISTINCT 'CW' STOCKTYP, ORGANCODE ORGANCD, 'HSX' EXCHCD, TICKER, TRADINGDATE, HIGHESTPRICE HPRICE, LOWESTPRICE LPRICE, OPENPRICE OPRICE, CLOSEPRICE CPRICE, TOTALMATCHVOLUME VOL, TO_DATE(TRUNC(UPDATEDATE)) UPDATEDATE
            FROM GETCWSTOCKPRICE@LINKFIIN
            WHERE TICKER = P_TICKER
            UNION ALL
            SELECT DISTINCT 'DR' STOCKTYP, 'EXCH' ORGANCD, 'HNX' EXCHCD,TO_CHAR(DERIVATIVECODE) TICKER, TRADINGDATE, HIGHESTPRICE HPRICE, LOWESTPRICE LPRICE, OPENPRICE OPRICE, CLOSEPRICE CPRICE, TOTALMATCHVOLUME VOL, TO_DATE(TRUNC(UPDATEDATE)) UPDATEDATE
            FROM DERIVATIVEPRICE@LINKFIIN
            WHERE TO_CHAR(DERIVATIVECODE) = P_TICKER
            UNION ALL
            SELECT DISTINCT 'DB' STOCKTYP, B.ORGANCODE ORGANCD, B.COMGROUPCODE EXCHCD, B.BONDCODE TICKER, B.TRADINGDATE, B.HIGHESTPRICE HPRICE, B.LOWESTPRICE LPRICE, B.OPENPRICE OPRICE, B.CLOSEPRICE CPRICE, B.TOTALMATCHVOLUME VOL, TO_DATE(TRUNC(TRADINGDATE)) UPDATEDATE
            FROM VW_BONDFIIN@LINKFIIN B
            WHERE B.BONDCODE = P_TICKER
        ) ORDER BY UPDATEDATE
    )LOOP
        DELETE FROM SBREFMRKDATA WHERE SRCMRKDATA = V_SRCMRKDATA AND TRADINGDT= TO_DATE(TRUNC(REC.TRADINGDATE)) AND FUNDCODEID = REC.STOCKTYP AND SYMBOL = REC.TICKER;
        DELETE FROM SBREFMRKDATA WHERE SRCMRKDATA = V_SRCMRKDATA AND TRADINGDT= TO_DATE(TRUNC(REC.TRADINGDATE)) AND FUNDCODEID IS NULL;

        INSERT INTO SBREFMRKDATA (AUTOID, SYMBOL, SRCMRKDATA, TRADINGDT, PHIGHEST, PLOWEST, PCLOSED, POPEN, VOLUME, TRANVALUE, FUNDCODEID)
        SELECT SEQ_SBREFMRKDATA.NEXTVAL, REC.TICKER, V_SRCMRKDATA, TO_DATE(TRUNC(REC.TRADINGDATE)), REC.HPRICE, REC.LPRICE, REC.CPRICE, REC.OPRICE, REC.VOL, (REC.CPRICE*REC.VOL), REC.STOCKTYP
        FROM DUAL;

    END LOOP;

    COMMIT;
    PLOG.SETENDSECTION(PKGCTX, 'SP_GETMRKTPRICE_FROM_FINN2');
EXCEPTION
WHEN OTHERS THEN
PLOG.ERROR (PKGCTX, SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
RETURN;
END;
/
