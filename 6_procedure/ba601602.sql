SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE BA601602 (
   PV_REFCURSOR           IN OUT   PKG_REPORT.REF_CURSOR,
   OPT                    IN       VARCHAR2,
   BRID                   IN       VARCHAR2,

   P_FDATE_PREVIOUS         IN       VARCHAR2,
   P_TDATE_PREVIOUS         IN       VARCHAR2,
   F_DATE                   IN       VARCHAR2,
   T_DATE                   IN       VARCHAR2,
   Report_No      IN       VARCHAR2 -- So chung tu
)
IS

    V_FDATE_PREVIOUS     DATE;
    V_TDATE_PREVIOUS       DATE;
    V_FROMDATE     DATE;
    V_TODATE       DATE;
    V_CURRDATE       DATE;

   V_STROPTION         VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
   V_STRBRID           VARCHAR2 (4);       -- USED WHEN V_NUMOPTION > 0

BEGIN

    V_STROPTION := OPT;
    IF V_STROPTION = 'A' THEN
        V_STRBRID := '%';
    ELSIF V_STROPTION = 'B' THEN
        V_STRBRID := SUBSTR(BRID,1,2) || '__' ;
    ELSE
        V_STRBRID:= BRID;
    END IF;

    V_FDATE_PREVIOUS := TO_DATE(P_FDATE_PREVIOUS, SYSTEMNUMS.C_DATE_FORMAT);
    V_TDATE_PREVIOUS := TO_DATE(P_TDATE_PREVIOUS, SYSTEMNUMS.C_DATE_FORMAT);
    V_FROMDATE := TO_DATE(F_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    V_TODATE := TO_DATE(T_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    SELECT GETCURRDATE INTO V_CURRDATE FROM DUAL;
 OPEN PV_REFCURSOR
 FOR
        SELECT -- DISTINCT
                SB.SYMBOL,      -- MA TP
                --------------------------------------HISTORY 1905 TRANSACTION--------------------------------------------------------------
                MAX(CASE WHEN TH.CUSTODYCD IS NOT NULL THEN SB.SYMBOL ELSE NULL END) AS MA_TP_DA_TT_LAI,
                MAX(CASE WHEN TH.CUSTODYCD IS NOT NULL THEN TH.FULLNAME ELSE NULL END) AS NAME_KH_TRA_LAI,
                MAX(CASE
                        WHEN TH.CUSTODYCD IS NOT NULL THEN CASE WHEN SUBSTR(NVL(CF.CUSTODYCD ,''),4,1)='F' THEN  CF.TRADINGCODE ELSE TO_CHAR(NVL(CF.IDCODE,'')) END
                        ELSE NULL
                END) IDCODE,   --MA ?KD
                MAX(CASE WHEN TH.CUSTODYCD IS NOT NULL THEN SE.TRADE /*+ SE.MARGIN + SE.MORTAGE + SE.BLOCKED + SE.SECURED + SE.REPO + SE.NETTING + SE.DTOCLOSE + SE.WITHDRAW + SE.EMKQTTY+ SE.BLOCKDTOCLOSE + SE.BLOCKWITHDRAW */ END ) SO_LUONG_TP,
                MAX(CASE WHEN TH.CUSTODYCD IS NOT NULL THEN SC.SHORTCD END) DV_TIEN_TE,
                MAX(CASE WHEN TH.CUSTODYCD IS NOT NULL THEN (SE.TRADE + SE.MARGIN + SE.MORTAGE + SE.BLOCKED + SE.SECURED + SE.REPO + SE.NETTING + SE.DTOCLOSE + SE.WITHDRAW + SE.EMKQTTY+ SE.BLOCKDTOCLOSE + SE.BLOCKWITHDRAW) * SB.PARVALUE END) TONG_MENH_GIA,
                MAX(CASE WHEN TH.CUSTODYCD IS NOT NULL THEN TH.TXDATE END) NGAY_THANH_TOAN_LAI,
                MAX(CASE WHEN TH.CUSTODYCD IS NOT NULL THEN TH.NETAMOUNT END) LAI_DA_THANH_TOAN,
                MAX(CASE WHEN TH.CUSTODYCD IS NOT NULL THEN SB.SYMBOL END) SYMBOL_THANH_TOAN
        FROM SBSECURITIES SB, SEMAST SE, CFMAST CF, SBCURRENCY SC,
        ------------------------------------------------------------
                (-- GIAO DICH DA TINH LAI 1905
                    SELECT TL.TXDATE, TL.TXNUM,
                        MAX(DECODE(TF.FLDCD,'05',TF.CVALUE,'')) BANKACC,
                        MAX(DECODE(TF.FLDCD,'03',TF.CVALUE,'')) FULLNAME,
                        MAX(DECODE(TF.FLDCD,'88',TF.CVALUE,'')) CUSTODYCD,
                        MAX(DECODE(TF.FLDCD,'10',TF.NVALUE,0)) NETAMOUNT,
                        MAX(DECODE(TF.FLDCD,'34',TF.NVALUE,0)) AMOUNT
                    FROM VW_TLLOG_ALL TL, VW_TLLOGFLD_ALL TF
                    WHERE TL.TXDATE = TF.TXDATE AND TL.TXNUM = TF.TXNUM AND TL.TXDATE BETWEEN V_FROMDATE AND V_TODATE
                        AND TL.TLTXCD = '1905' AND TL.DELTD <> 'Y' AND TL.TXSTATUS = '1'
                    GROUP BY TL.TXDATE, TL.TXNUM
               )TH
        WHERE SB.SECTYPE IN ('003','006')
              AND SB.ROLEOFSHV IN ('002','003','004')
              AND SB.CODEID = SE.CODEID
              AND (SE.TRADE)/* + SE.MARGIN + SE.MORTAGE + SE.BLOCKED + SE.SECURED + SE.REPO + SE.NETTING + SE.DTOCLOSE + SE.WITHDRAW + SE.EMKQTTY+ SE.BLOCKDTOCLOSE + SE.BLOCKWITHDRAW)*/ > 0
              AND SE.CUSTID = CF.CUSTID
              AND SB.EXPDATE > v_ToDate --GETCURRDATE
              AND CF.CUSTODYCD= TH.CUSTODYCD(+)
              AND SB.CCYCD = SC.CCYCD
        GROUP BY   SB.SYMBOL      -- MA TP
UNION ALL
        SELECT -- DISTINCT
                NULL SYMBOL,      -- MA TP
                --------------------------------------HISTORY 1905 TRANSACTION--------------------------------------------------------------
                NULL MA_TP_DA_TT_LAI,
                NULL NAME_KH_TRA_LAI,
                NULL IDCODE,   --MA ?KD
                NULL SO_LUONG_TP,
                NULL DV_TIEN_TE,
                NULL TONG_MENH_GIA,
                NULL NGAY_THANH_TOAN_LAI,
                NULL LAI_DA_THANH_TOAN,
                NULL SYMBOL_THANH_TOAN
        FROM DUAL
      ;
EXCEPTION
  WHEN OTHERS
   THEN
   DBMS_OUTPUT.PUT_LINE('BA601602 ERROR');
   PLOG.ERROR('BA601602: - ' ||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
      RETURN;
END;
/
