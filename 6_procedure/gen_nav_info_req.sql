SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE gen_nav_info_req
IS
    L_REQBODY VARCHAR2(4000);
    L_TXDARE DATE;
BEGIN
    L_TXDARE := GETCURRDATE;
    FOR REC IN (
        SELECT INF.*, A1.CDCONTENT CFTYPE
        FROM NAV_INFO INF,
        (SELECT * FROM ALLCODE WHERE CDNAME = 'SUPRVFUNDTYPE' AND CDTYPE = 'SB') A1
        WHERE INF.REQSTATUS = 'P'
        AND INF.FTYPE = A1.CDVAL(+)
    )LOOP
        L_REQBODY := '';
        L_REQBODY := L_REQBODY || 'AMCCODE:' || REC.AMC || CHR(13) || CHR(10);
        L_REQBODY := L_REQBODY || 'FUNDCODE:' || REC.FUNDCODE || CHR(13) || CHR(10);
        L_REQBODY := L_REQBODY || 'NAVCCQ:' || TO_CHAR(REC.NAVCCQ, 'FM999999999999990.9990') || CHR(13) || CHR(10);
        L_REQBODY := L_REQBODY || 'NAVDATE:' || TO_CHAR(REC.NAVDATE,'RRRRMMDD') || CHR(13) || CHR(10);
        L_REQBODY := L_REQBODY || 'FUNDTYPE:' || REC.CFTYPE;

        INSERT INTO SYN_AITHER_REQ(AUTOID, TYPEREQ, OBJECTREQKEY, OBJECTKEY, TXDATE, BODYREQ)
        VALUES (SEQ_SYN_AITHER_REQ.NEXTVAL, 'NAVINFO', REC.AMC || '-' || REC.FUNDCODE || '-' || TO_CHAR(REC.NAVDATE,'RRRRMMDD'), REC.AUTOID, REC.NAVDATE, L_REQBODY);

        UPDATE NAV_INFO SET REQSTATUS = 'Q' WHERE AUTOID = REC.AUTOID;
    END LOOP;
EXCEPTION WHEN OTHERS THEN
  PLOG.ERROR ('GEN_NAV_INFO_REQ: ' || SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
END;
/
