SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE sp_getmarketinfo_from_finn (PV_TODATE IN DATE)
IS
    PKGCTX   PLOG.LOG_CTX;
BEGIN
    PLOG.SETBEGINSECTION(PKGCTX, 'SP_GETMARKETINFO_FROM_FINN');

    FOR REC IN (
        SELECT DT.*, INF.AUTOID, INF.CLOSEINDEX INF_CLOSEINDEX
        FROM
        (
            SELECT COMGROUPCODE INDEXCODE, TRADINGDATE, CLOSEINDEX, INDEXVALUE, INDEXCHANGE, PERCENTINDEXCHANGE, REFERENCEINDEX, OPENINDEX, HIGHESTINDEX, LOWESTINDEX, TYPEINDEX, TOTALTRADE,
                TOTALBUYTRADE, TOTALBUYTRADEVOLUME, TOTALSELLTRADE, TOTALSELLTRADEVOLUME, 0 TOTALSTOCK, TOTALMATCHVOLUME, TOTALMATCHVALUE, TOTALDEALVOLUME, TOTALDEALVALUE,
                TOTALVOLUME, TOTALVALUE, TOTALUPVOLUME, TOTALDOWNVOLUME, TOTALNOCHANGEVOLUME, TOTALSTOCKUPPRICE, TOTALSTOCKDOWNPRICE, TOTALSTOCKNOCHANGEPRICE, 0 TOTALUPCEILING,
                0 TOTALDOWNFLOOR, FOREIGNBUYVALUEMATCHED, FOREIGNBUYVOLUMEMATCHED, FOREIGNSELLVALUEMATCHED, FOREIGNSELLVOLUMEMATCHED, FOREIGNBUYVALUEDEAL, FOREIGNBUYVOLUMEDEAL,
                FOREIGNSELLVALUEDEAL, FOREIGNSELLVOLUMEDEAL, FOREIGNBUYVALUETOTAL, FOREIGNBUYVOLUMETOTAL, FOREIGNSELLVALUETOTAL, FOREIGNSELLVOLUMETOTAL, FOREIGNTOTALROOM, FOREIGNCURRENTROOM,
                UPDATEDATE, CREATEDATE
            FROM HOSEINDEX@LINKFIIN
            WHERE TO_DATE(TRUNC(UPDATEDATE)) = PV_TODATE
            UNION ALL
            SELECT COMGROUPCODE INDEXCODE, TRADINGDATE, CLOSEINDEX, INDEXVALUE, INDEXCHANGE, PERCENTINDEXCHANGE, REFERENCEINDEX, OPENINDEX, HIGHESTINDEX, LOWESTINDEX, TYPEINDEX, TOTALTRADE,
                TOTALBUYTRADE, TOTALBUYTRADEVOLUME, TOTALSELLTRADE, TOTALSELLTRADEVOLUME, TOTALSTOCK, TOTALMATCHVOLUME, TOTALMATCHVALUE, TOTALDEALVOLUME, TOTALDEALVALUE,
                TOTALVOLUME, TOTALVALUE, TOTALUPVOLUME, TOTALDOWNVOLUME, TOTALNOCHANGEVOLUME, TOTALSTOCKUPPRICE, TOTALSTOCKDOWNPRICE, TOTALSTOCKNOCHANGEPRICE, 0 TOTALUPCEILING,
                0 TOTALDOWNFLOOR, FOREIGNBUYVALUEMATCHED, FOREIGNBUYVOLUMEMATCHED, FOREIGNSELLVALUEMATCHED, FOREIGNSELLVOLUMEMATCHED, FOREIGNBUYVALUEDEAL, FOREIGNBUYVOLUMEDEAL,
                FOREIGNSELLVALUEDEAL, FOREIGNSELLVOLUMEDEAL, FOREIGNBUYVALUETOTAL, FOREIGNBUYVOLUMETOTAL, FOREIGNSELLVALUETOTAL, FOREIGNSELLVOLUMETOTAL, FOREIGNTOTALROOM, FOREIGNCURRENTROOM,
                UPDATEDATE, CREATEDATE
            FROM HNXINDEX@LINKFIIN
            WHERE TO_DATE(TRUNC(UPDATEDATE)) = PV_TODATE
            UNION ALL
            SELECT COMGROUPCODE INDEXCODE, TRADINGDATE, CLOSEINDEX, INDEXVALUE, INDEXCHANGE, PERCENTINDEXCHANGE, REFERENCEINDEX, OPENINDEX, HIGHESTINDEX, LOWESTINDEX, TYPEINDEX, TOTALTRADE,
                TOTALBUYTRADE, TOTALBUYTRADEVOLUME, TOTALSELLTRADE, TOTALSELLTRADEVOLUME, TOTALSTOCK, TOTALMATCHVOLUME, TOTALMATCHVALUE, TOTALDEALVOLUME, TOTALDEALVALUE,
                TOTALVOLUME, TOTALVALUE, TOTALUPVOLUME, TOTALDOWNVOLUME, TOTALNOCHANGEVOLUME, TOTALSTOCKUPPRICE, TOTALSTOCKDOWNPRICE, TOTALSTOCKNOCHANGEPRICE, 0 TOTALUPCEILING,
                0 TOTALDOWNFLOOR, FOREIGNBUYVALUEMATCHED, FOREIGNBUYVOLUMEMATCHED, FOREIGNSELLVALUEMATCHED, FOREIGNSELLVOLUMEMATCHED, FOREIGNBUYVALUEDEAL, FOREIGNBUYVOLUMEDEAL,
                FOREIGNSELLVALUEDEAL, FOREIGNSELLVOLUMEDEAL, FOREIGNBUYVALUETOTAL, FOREIGNBUYVOLUMETOTAL, FOREIGNSELLVALUETOTAL, FOREIGNSELLVOLUMETOTAL, FOREIGNTOTALROOM, FOREIGNCURRENTROOM,
                UPDATEDATE, CREATEDATE
            FROM UPCOMINDEX@LINKFIIN
            WHERE TO_DATE(TRUNC(UPDATEDATE)) = PV_TODATE
        ) DT
        LEFT JOIN (
            SELECT * FROM MARKET_INFO WHERE TRADINGDATE = PV_TODATE
        ) INF ON INF.INDEXCODE = DT.INDEXCODE AND INF.TRADINGDATE = DT.TRADINGDATE
    )LOOP
        IF REC.AUTOID IS NULL THEN
            INSERT INTO MARKET_INFO(AUTOID, INDEXCODE, TRADINGDATE, CLOSEINDEX, REQSTATUS, INDEXVALUE, INDEXCHANGE, PERCENTINDEXCHANGE, REFERENCEINDEX, OPENINDEX,
                                    HIGHESTINDEX, LOWESTINDEX, TYPEINDEX, TOTALTRADE, TOTALBUYTRADE, TOTALBUYTRADEVOLUME, TOTALSELLTRADE, TOTALSELLTRADEVOLUME, TOTALSTOCK, TOTALMATCHVOLUME,
                                    TOTALMATCHVALUE, TOTALDEALVOLUME, TOTALDEALVALUE, TOTALVOLUME, TOTALVALUE, TOTALUPVOLUME, TOTALDOWNVOLUME, TOTALNOCHANGEVOLUME, TOTALSTOCKUPPRICE, TOTALSTOCKDOWNPRICE,
                                    TOTALSTOCKNOCHANGEPRICE, TOTALUPCEILING, TOTALDOWNFLOOR, FOREIGNBUYVALUEMATCHED, FOREIGNBUYVOLUMEMATCHED, FOREIGNSELLVALUEMATCHED, FOREIGNSELLVOLUMEMATCHED, FOREIGNBUYVALUEDEAL, FOREIGNBUYVOLUMEDEAL, FOREIGNSELLVALUEDEAL,
                                    FOREIGNSELLVOLUMEDEAL, FOREIGNBUYVALUETOTAL, FOREIGNBUYVOLUMETOTAL, FOREIGNSELLVALUETOTAL, FOREIGNSELLVOLUMETOTAL, FOREIGNTOTALROOM, FOREIGNCURRENTROOM, UPDATEDATE, CREATEDATE)
            VALUES(SEQ_MARKET_INFO.NEXTVAL, REC.INDEXCODE, REC.TRADINGDATE, REC.CLOSEINDEX, 'P', REC.INDEXVALUE, REC.INDEXCHANGE, REC.PERCENTINDEXCHANGE, REC.REFERENCEINDEX, REC.OPENINDEX,
                REC.HIGHESTINDEX, REC.LOWESTINDEX, REC.TYPEINDEX, REC.TOTALTRADE, REC.TOTALBUYTRADE, REC.TOTALBUYTRADEVOLUME, REC.TOTALSELLTRADE, REC.TOTALSELLTRADEVOLUME, REC.TOTALSTOCK, REC.TOTALMATCHVOLUME,
                REC.TOTALMATCHVALUE, REC.TOTALDEALVOLUME, REC.TOTALDEALVALUE, REC.TOTALVOLUME, REC.TOTALVALUE, REC.TOTALUPVOLUME, REC.TOTALDOWNVOLUME, REC.TOTALNOCHANGEVOLUME, REC.TOTALSTOCKUPPRICE, REC.TOTALSTOCKDOWNPRICE,
                REC.TOTALSTOCKNOCHANGEPRICE, REC.TOTALUPCEILING, REC.TOTALDOWNFLOOR, REC.FOREIGNBUYVALUEMATCHED, REC.FOREIGNBUYVOLUMEMATCHED, REC.FOREIGNSELLVALUEMATCHED, REC.FOREIGNSELLVOLUMEMATCHED, REC.FOREIGNBUYVALUEDEAL, REC.FOREIGNBUYVOLUMEDEAL, REC.FOREIGNSELLVALUEDEAL,
                REC.FOREIGNSELLVOLUMEDEAL, REC.FOREIGNBUYVALUETOTAL, REC.FOREIGNBUYVOLUMETOTAL, REC.FOREIGNSELLVALUETOTAL, REC.FOREIGNSELLVOLUMETOTAL, REC.FOREIGNTOTALROOM, REC.FOREIGNCURRENTROOM, REC.UPDATEDATE, REC.CREATEDATE
            );
        ELSE
            UPDATE MARKET_INFO
            SET INDEXVALUE = REC.INDEXVALUE,
            INDEXCHANGE = REC.INDEXCHANGE,
            PERCENTINDEXCHANGE = REC.PERCENTINDEXCHANGE,
            REFERENCEINDEX = REC.REFERENCEINDEX,
            OPENINDEX = REC.OPENINDEX,
            HIGHESTINDEX = REC.HIGHESTINDEX,
            LOWESTINDEX = REC.LOWESTINDEX,
            TYPEINDEX = REC.TYPEINDEX,
            TOTALTRADE = REC.TOTALTRADE,
            TOTALBUYTRADE = REC.TOTALBUYTRADE,
            TOTALBUYTRADEVOLUME = REC.TOTALBUYTRADEVOLUME,
            TOTALSELLTRADE = REC.TOTALSELLTRADE,
            TOTALSELLTRADEVOLUME = REC.TOTALSELLTRADEVOLUME,
            TOTALSTOCK = REC.TOTALSTOCK,
            TOTALMATCHVOLUME = REC.TOTALMATCHVOLUME,
            TOTALMATCHVALUE = REC.TOTALMATCHVALUE,
            TOTALDEALVOLUME = REC.TOTALDEALVOLUME,
            TOTALDEALVALUE = REC.TOTALDEALVALUE,
            TOTALVOLUME = REC.TOTALVOLUME,
            TOTALVALUE = REC.TOTALVALUE,
            TOTALUPVOLUME = REC.TOTALUPVOLUME,
            TOTALDOWNVOLUME = REC.TOTALDOWNVOLUME,
            TOTALNOCHANGEVOLUME = REC.TOTALNOCHANGEVOLUME,
            TOTALSTOCKUPPRICE = REC.TOTALSTOCKUPPRICE,
            TOTALSTOCKDOWNPRICE = REC.TOTALSTOCKDOWNPRICE,
            TOTALSTOCKNOCHANGEPRICE = REC.TOTALSTOCKNOCHANGEPRICE,
            TOTALUPCEILING = REC.TOTALUPCEILING,
            TOTALDOWNFLOOR = REC.TOTALDOWNFLOOR,
            FOREIGNBUYVALUEMATCHED = REC.FOREIGNBUYVALUEMATCHED,
            FOREIGNBUYVOLUMEMATCHED = REC.FOREIGNBUYVOLUMEMATCHED,
            FOREIGNSELLVALUEMATCHED = REC.FOREIGNSELLVALUEMATCHED,
            FOREIGNSELLVOLUMEMATCHED = REC.FOREIGNSELLVOLUMEMATCHED,
            FOREIGNBUYVALUEDEAL = REC.FOREIGNBUYVALUEDEAL,
            FOREIGNBUYVOLUMEDEAL = REC.FOREIGNBUYVOLUMEDEAL,
            FOREIGNSELLVALUEDEAL = REC.FOREIGNSELLVALUEDEAL,
            FOREIGNSELLVOLUMEDEAL = REC.FOREIGNSELLVOLUMEDEAL,
            FOREIGNBUYVALUETOTAL = REC.FOREIGNBUYVALUETOTAL,
            FOREIGNBUYVOLUMETOTAL = REC.FOREIGNBUYVOLUMETOTAL,
            FOREIGNSELLVALUETOTAL = REC.FOREIGNSELLVALUETOTAL,
            FOREIGNSELLVOLUMETOTAL = REC.FOREIGNSELLVOLUMETOTAL,
            FOREIGNTOTALROOM = REC.FOREIGNTOTALROOM,
            FOREIGNCURRENTROOM = REC.FOREIGNCURRENTROOM,
            UPDATEDATE = REC.UPDATEDATE,
            CREATEDATE = REC.CREATEDATE
            WHERE AUTOID = REC.AUTOID;

            IF REC.CLOSEINDEX <> REC.INF_CLOSEINDEX THEN
                UPDATE MARKET_INFO
                SET CLOSEINDEX = REC.CLOSEINDEX, REQSTATUS = 'P'
                WHERE AUTOID = REC.AUTOID;
            END IF;
        END IF;
    END LOOP;
    COMMIT;
    PLOG.SETENDSECTION(PKGCTX, 'SP_GETMARKETINFO_FROM_FINN');
EXCEPTION WHEN OTHERS THEN
    PLOG.ERROR (PKGCTX, SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
    RETURN;
END;
/
