SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE sp_generate_gl (
  p_txdate in VARCHAR
) IS
  -- TRUONGLD ADD 31/10/2019, GEN GL EOD
  v_code  NUMBER;
  v_errm  VARCHAR2(64);
  pv_errmsg varchar(4000);
  V_TXDATE  DATE;
  pkgctx plog.log_ctx;
  logrow tlogdebug%ROWTYPE;
  l_bankreqid   VARCHAR2(100);
  v_DEALINGCUSTODYCD VARCHAR2(100);
BEGIN

    Begin
          SELECT varvalue into v_DEALINGCUSTODYCD
          FROM SYSVAR WHERE varname = 'DEALINGCUSTODYCD';
    EXCEPTION WHEN OTHERS THEN
        V_DEALINGCUSTODYCD := 'SHVE';
    END;

    V_TXDATE := TO_DATE(p_txdate,'DD/MM/RRRR');
    DELETE FROM gl_exp_tran WHERE txdate  = V_TXDATE;
    /*
    INSERT INTO gl_exp_tran (REF,REFAUTOID,TLTXCD,TXNUM,TXDATE,BUSDATE,CUSTID,CUSTODYCD,CIFID,SYMBOL,QTTY,AMOUNT,CCYCD,DORC,DEBITACCT,CREDITACCT,DELTD,mcustodycd,mcifid)
    SELECT TO_CHAR(TR.TXDATE, 'YYYYMMDD') || TR.TXNUM REF, GL.AUTOID REFAUTOID, TR.TLTXCD, TR.TXNUM, TR.TXDATE,  TR.BUSDATE,
           CF.CUSTID, CF.CUSTODYCD, CF.CIFID, SB.SYMBOL,TR.NAMT QTTY, SB.PARVALUE AMOUNT, GL.CCYCD, GL.DORC,
           GL.DEBITACCOUNT DEBITACCT, GL.CREBITACCOUNT CREDITACCT, 'N',vw.custodycd,nvl(cf.mcifid,cf.cifid) mcifid
    FROM CFMAST CF,
         (
            SELECT TLTXCD, TXNUM, TXDATE, BUSDATE, CUSTODYCD,AFACCTNO, AFACCTNO||CODEID ACCTNO, SYMBOL,CODEID, ABS(NAMT) NAMT,
                   CASE WHEN  NAMT < 0 THEN 'D' ELSE 'C' END TXTYPE
            FROM
            (
                SELECT TR.TLTXCD, TR.TXNUM, TR.TXDATE, TR.BUSDATE, TR.CUSTODYCD,TR.AFACCTNO, --TR.ACCTNO, --TR.CODEID,
                       (case when SB.REFSYMBOL is null then SB.SYMBOL else SB.REFSYMBOL end) SYMBOL,
                       (case when SB.REFSYMBOL is null then SB.CODEID else SB.REFCODEID end) CODEID,
                       SUM(DECODE(TXTYPE,'C', NAMT, -NAMT)) NAMT
                FROM VW_SETRAN_GEN tr,
                     (
                          SELECT SB.CODEID, SB.SYMBOL,
                                SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                            FROM SBSECURITIES SB, SBSECURITIES SB1
                            WHERE SB.REFCODEID = SB1.CODEID(+)
                                and sb.sectype <> '004'
                     )SB
                WHERE tr.codeid = sb.codeid
                      and FIELD IN ('TRADE','HOLD','MORTAGE','NETTING','BLOCKED','WITHDRAW','BLOCKWITHDRAW','EMKQTTY')
                      and TR.TLTXCD NOT IN ('1902','1903')
                GROUP BY TR.TLTXCD, TR.TXNUM, TR.TXDATE, TR.BUSDATE, TR.CUSTODYCD,TR.AFACCTNO,
                       (case when SB.REFSYMBOL is null then SB.SYMBOL else SB.REFSYMBOL end),
                       (case when SB.REFSYMBOL is null then SB.CODEID else SB.REFCODEID end)
                HAVING SUM(DECODE(TXTYPE,'C', NAMT, -NAMT)) <> 0
            )
         ) TR,
         POSTMAPEXT GL, SBSECURITIES SB,vw_cfmast_m vw
    WHERE CF.CUSTODYCD = TR.CUSTODYCD
    --AND TR.FIELD ='TRADE'
    AND SB.CODEID = TR.CODEID
    AND TR.TXTYPE = GL.DORC
    AND TR.txdate = V_TXDATE
    AND SB.CCYCD = GL.CCYCD
    AND GL.status ='A'
    and sb.sectype <> '004' -- Khong lay CK quyen.
    AND (CASE WHEN SB.TRADEPLACE IN ('001','002','005','010') THEN '000' ELSE '001' END) = GL.TRADEPLACE
    AND (CASE WHEN GL.CFTYPE='000' THEN 1
            WHEN GL.CFTYPE ='001' AND  SUBSTR(CF.CUSTODYCD,1,4) = v_DEALINGCUSTODYCD THEN 1
            WHEN GL.CFTYPE ='003' AND  SUBSTR(CF.CUSTODYCD,1,4) <> v_DEALINGCUSTODYCD THEN 1
            ELSE 0 END) = 1
    and cf.custodycd = vw.custodycd_org;
    */
    INSERT INTO GL_EXP_TRAN (REF, REFAUTOID, TLTXCD, TXNUM, TXDATE, BUSDATE, CUSTID, CUSTODYCD, CIFID, SYMBOL, QTTY, AMOUNT, CCYCD, DORC, DEBITACCT, CREDITACCT, DELTD, MCUSTODYCD, MCIFID)
    SELECT TO_CHAR(V_TXDATE, 'YYYYMMDD'), GL.AUTOID, '', '', V_TXDATE, V_TXDATE, DT.CUSTID, CF.CUSTODYCD, CF.CIFID, DT.SYMBOL, DT.QTTY, DT.PARVALUE, GL.CCYCD, GL.DORC,
               GL.DEBITACCOUNT DEBITACCT, GL.CREBITACCOUNT CREDITACCT, 'N', VW.CUSTODYCD, NVL(CF.MCIFID,CF.CIFID) MCIFID
    FROM CFMAST CF, VW_CFMAST_M VW,
    (
        SELECT TR.CUSTID, '00' CCYCD , TR.TRADEPLACE, TR.SECTYPE, TR.SYMBOL, TR.CODEID, TR.PARVALUE,
            ABS(TR.TOTAL_BEGIN - TR.TOTAL_END) QTTY, (CASE WHEN TR.TOTAL_BEGIN - TR.TOTAL_END >= 0 THEN 'D' ELSE 'C' END) DORC
        FROM
        (
            SELECT MST.CUSTID, SB.TRADEPLACE, SB.SECTYPE, SB.SYMBOL, SB.CODEID, SB.PARVALUE,
                   SUM(MST.TRADE + MST.HOLD + MST.MORTAGE + MST.NETTING + MST.BLOCKED + MST.WITHDRAW + MST.BLOCKWITHDRAW - NVL(TR_BEGIN.NAMT,0)) TOTAL_BEGIN,
                   SUM(MST.TRADE + MST.HOLD + MST.MORTAGE + MST.NETTING + MST.BLOCKED + MST.WITHDRAW + MST.BLOCKWITHDRAW - NVL(TR_END.NAMT,0)) TOTAL_END
            FROM SEMAST MST
            INNER JOIN (
                SELECT SB.CODEID, SB.SECTYPE, SB.SYMBOL, SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL, SB.EXPDATE, SB.PARVALUE, SC.SHORTCD CURRENCY, (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE
                FROM SBSECURITIES SB, SBSECURITIES SB1, SBCURRENCY SC
                WHERE SB.REFCODEID = SB1.CODEID(+)
                AND SB.SECTYPE NOT IN ('000','111','222','333','444','555','004')
                AND SC.CCYCD = SB.CCYCD
            ) SB ON MST.CODEID = SB.CODEID
            LEFT JOIN (
                SELECT SE.ACCTNO, SUM(DECODE(SE.TXTYPE, 'C', NAMT, -NAMT)) NAMT
                FROM VW_SETRAN_GEN SE
                WHERE SE.TXDATE >= V_TXDATE
                AND SE.TXTYPE IN ('C','D') AND SE.DELTD <> 'Y'
                AND SE.FIELD IN ('TRADE','HOLD','MORTAGE','NETTING','BLOCKED','WITHDRAW','BLOCKWITHDRAW')
                GROUP BY SE.ACCTNO
            ) TR_BEGIN ON MST.ACCTNO = TR_BEGIN.ACCTNO
            LEFT JOIN (
                SELECT SE.ACCTNO, SUM(DECODE(SE.TXTYPE, 'C', NAMT, -NAMT)) NAMT
                FROM VW_SETRAN_GEN SE
                WHERE SE.TXDATE > V_TXDATE
                AND SE.TXTYPE IN ('C','D') AND SE.DELTD <> 'Y'
                AND SE.FIELD IN ('TRADE','HOLD','MORTAGE','NETTING','BLOCKED','WITHDRAW','BLOCKWITHDRAW')
                GROUP BY SE.ACCTNO
            ) TR_END ON MST.ACCTNO = TR_END.ACCTNO
            GROUP BY MST.CUSTID, SB.TRADEPLACE, SB.SECTYPE, SB.SYMBOL, SB.CODEID, SB.PARVALUE,NVL(SB.REFCODEID, SB.CODEID)
        ) TR
        WHERE TR.TOTAL_BEGIN <> TR.TOTAL_END
    ) DT,
    (
        SELECT * FROM POSTMAPEXT WHERE STATUS = 'A'
    ) GL
    WHERE DT.CUSTID = CF.CUSTID
    AND DT.DORC = GL.DORC
    AND DT.CCYCD = GL.CCYCD
    AND CF.CUSTODYCD = VW.CUSTODYCD_ORG
    AND CF.CUSTATCOM = 'Y'
    AND (CASE WHEN DT.TRADEPLACE IN ('001','002','005','010') THEN '000' ELSE '001' END) = GL.TRADEPLACE
    AND (CASE WHEN GL.CFTYPE = '000' THEN 1
          WHEN GL.CFTYPE ='001' AND  SUBSTR(CF.CUSTODYCD,1,4) = V_DEALINGCUSTODYCD THEN 1
          WHEN GL.CFTYPE ='003' AND  SUBSTR(CF.CUSTODYCD,1,4) <> V_DEALINGCUSTODYCD THEN 1
          ELSE 0 END) = 1;

    DELETE FROM GL_EXP_RESULTS WHERE TXDATE = V_TXDATE;
    --trung.luu: 11-03-2021     SHBVNEX-2074 log them tai khoan me
    INSERT INTO GL_EXP_RESULTS (TXDATE,BUSDATE,CUSTODYCD,CIFID,DEBITACCT,CREDITACCT, AMOUNT,STATUS, DELTD, CCYCD, NOTE,MCUSTODYCD,MCIFID)
    SELECT TXDATE,TXDATE BUSDATE, CUSTODYCD, CIFID, DEBITACCT,CREDITACCT, SUM(QTTY * AMOUNT) AMOUNT, 'N', 'N', SB.SHORTCD, MST.ACNAME, GL.MCUSTODYCD,GL.MCIFID
    FROM GL_EXP_TRAN GL, SBCURRENCY SB, POSTMAPEXT MST -- GL.REFAUTOID
    WHERE TXDATE = V_TXDATE
    AND GL.CCYCD = SB.CCYCD
    AND GL.REFAUTOID = MST.AUTOID
    GROUP BY TXDATE, CUSTODYCD, CIFID, DEBITACCT,CREDITACCT,SB.SHORTCD, MST.ACNAME, GL.MCUSTODYCD,GL.MCIFID;

    UPDATE GL_EXP_RESULTS SET BANKREQID = TO_CHAR(TXDATE,'RRRRMMDD')||LPAD (SEQ_GL_EXP_RESULTS.NEXTVAL, 4, '0') WHERE TXDATE = V_TXDATE;

    PCK_BANKFLMS.SP_AUTO_GEN_SCOA();

    COMMIT;

--gen manual
/*
BEGIN
    FOR REC IN (
        SELECT SB.SBDATE
        FROM SBCLDR SB,
        (SELECT MIN(TXDATE) MINDATE, MAX(TXDATE) MAXDATE FROM VW_SETRAN_GEN WHERE NVL(DELTD, 'N') = 'N') SE
        WHERE SB.SBDATE <= SE.MAXDATE
        AND SB.SBDATE >= SE.MINDATE
        AND SB.HOLIDAY = 'N'
        AND SB.CLDRTYPE = '000'
    )
    LOOP
        INSERT INTO GL_EXP_TRAN (REF, REFAUTOID, TLTXCD, TXNUM, TXDATE, BUSDATE, CUSTID, CUSTODYCD, CIFID, SYMBOL, QTTY, AMOUNT, CCYCD, DORC, DEBITACCT, CREDITACCT, DELTD, MCUSTODYCD, MCIFID)
        SELECT TO_CHAR(REC.SBDATE, 'YYYYMMDD'), GL.AUTOID, '', '', REC.SBDATE, REC.SBDATE, DT.CUSTID, CF.CUSTODYCD, CF.CIFID, DT.SYMBOL, DT.QTTY, DT.PARV ALUE, GL.CCYCD, GL.DORC,
               GL.DEBITACCOUNT DEBITACCT, GL.CREBITACCOUNT CREDITACCT, 'N', VW.CUSTODYCD, NVL(CF.MCIFID,CF.CIFID) MCIFID
        FROM CFMAST CF, VW_CFMAST_M VW,
        (
            SELECT TR.CUSTID, '00' CCYCD, TR.TRADEPLACE, TR.SECTYPE, TR.SYMBOL, TR.CODEID, TR.PARVALUE,
                ABS(TR.TOTAL_BEGIN - TR.TOTAL_END) QTTY, (CASE WHEN TR.TOTAL_BEGIN - TR.TOTAL_END >= 0 THEN 'D' ELSE 'C' END) DORC
            FROM
            (
                SELECT MST.CUSTID, SB.TRADEPLACE, SB.SECTYPE, SB.SYMBOL, SB.CODEID, SB.PARVALUE,
                       SUM(MST.TRAD E + MST.HOLD + MST.MORTAGE + MST.NETTING + MST.BLOCKED + MST.WITHDRAW + MST.BLOCKWITHDRAW - NVL(TR_BEGIN.NAMT,0)) TOTAL_BEGIN,
                       SUM(MST.TRADE + MST.HOLD + MST.MORTAGE + MST.NETTING + MST.BLOCKED + MST.WITHDRAW + MST.BLOCKWITHDRAW - NVL(TR_END.NAMT,0)) TOTAL_END
                FROM SEMAST MST
                INNER JOIN (
                    SELECT SB.CODEID, SB.SECTYPE, SB.SYMBOL, SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL, SB.EXPDATE, SB.PARVALUE, SC.SHORTCD CURRENCY, (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE
                    FROM SBSECURITIES SB, SBSECURITIES SB1, SBCURRENCY SC
            ;         WHERE SB.REFCODEID = SB1.CODEID(+)
                    AND SB.SECTYPE NOT IN ('000','111','222','333','444','555','004')
                    AND SC.CCYCD = SB.CCYCD
                ) SB ON MST.CODEID = SB.CODEID
                LEFT JOIN (
                    SELECT SE.ACCTNO, SUM(DECODE(SE.TXTYPE, 'C', NAMT, -NAMT)) NAMT
                    FROM VW_SETRAN_GEN SE
                    WHERE SE.TXDATE >= REC.SBDATE
                    AND SE.TXTYPE IN ('C','D') AND SE.DELTD <> 'Y'
  ;                   AND SE.FIELD IN ('TRADE','HOLD','MORTAGE','NETTING','BLOCKED','WITHDRAW','BLOCKWITHDRAW')
                    GROUP BY SE.ACCTNO
                ) TR_BEGIN ON MST.ACCTNO = TR_BEGIN.ACCTNO
                LEFT JOIN (
                    SELECT SE.ACCTNO, SUM(DECODE(SE.TXTYPE, 'C', NAMT, -NAMT)) NAMT
                    FROM VW_SETRAN_GEN SE
                    WHERE SE.TXDATE > REC.SBDATE
                    AND SE.TXTYPE IN ('C','D') AND SE.DELTD <> 'Y'
                    AND SE.FIELD IN ('TRADE','HOLD','MORTAGE','NETTING','BLOCKED','WITHDRAW','BLOCKWITHDRAW')
                    GROUP BY SE.ACCTNO
                ) TR_END ON MST.ACCTNO = TR_END.ACCTNO
                GROUP BY MST.CUSTID, SB.TRADEPLACE, SB.SECTYPE, SB.SYMBOL, SB.CODEID, SB.PARVALUE,NVL(SB.REFCODEID, SB.CODEID)
            ) TR
            WHERE TR.TOTAL_BEGIN <> TR.TOTAL_END
        ) DT,
        (
            SELECT * FROM POSTMAPEXT WHERE STATUS = 'A'
        ) GL
        WHERE DT.CUSTID = CF.CUSTID
        AND DT.DORC = GL.DORC
        AND DT.CCYCD = GL.CCYCD
        AND CF.CUSTODYCD = VW.CUSTODYCD_ORG
        AND CF.CUSTATCOM = 'Y'
        AND (CASE WHEN DT.TRADEPLACE IN ('001','002','005','010') THEN '000' ELSE '001' END) = GL.TRADEPLACE
        AND (CASE WHEN GL.CFTYPE = '000' THEN 1
                  WHEN GL.CFTYPE ='001' AND  SUBSTR(CF.CUSTODYCD,1,4) = 'SHVE' THEN 1
                  WHEN GL.CFTYPE ='003' AND  SUBSTR(CF.CUSTODYCD,1,4) <> 'SHVE' THEN 1
                  ELSE 0 END) = 1;

        INSERT INTO GL_EXP_RESULTS (TXDATE,BUSDATE,CUSTODYCD,CIFID,DEBITACCT,CREDITACCT, AMOUNT ,STATUS, DELTD, CCYCD, NOTE,MCUSTODYCD,MCIFID)
        SELECT TXDATE,TXDATE BUSDATE, CUSTODYCD, CIFID, DEBITACCT,CREDITACCT, SUM(QTTY * AMOUNT) AMOUNT, 'N', 'N', SB.SHORTCD, MST.ACNAME, GL.MCUSTODYCD,GL.MCIFID
        FROM GL_EXP_TRAN GL, SBCURRENCY SB, POSTMAPEXT MST -- GL.REFAUTOID
        WHERE TXDATE = REC.SBDATE
        AND GL.CCYCD = SB.CCYCD
        AND GL.REFAUTOID = MST.AUTOID
        GROUP BY TXDATE, CUSTODYCD, CIFID, DEBITACCT,CREDITACCT,SB.SHORTCD, MST.ACNAME, GL.MCUSTODYCD,GL.MCIFID;
    END LOOP;
EXCEPTION WHEN OTHERS THEN
    PLOG.ERROR(SQLERRM || dbms_utility.format_error_backtrace);
END;
    */
EXCEPTION
  WHEN OTHERS THEN
      PLOG.ERROR(SQLERRM || dbms_utility.format_error_backtrace);
      RAISE ERRNUMS.E_SYSTEM_ERROR;
END;
/
