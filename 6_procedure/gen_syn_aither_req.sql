SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE gen_syn_aither_req
IS
    L_REQBODY VARCHAR2(4000);
    L_TXDARE DATE;
    L_FLDNAME VARCHAR2(50);
    L_CVAL VARCHAR2(50);
    L_REQID NUMBER;
    L_COUNT_LIMIT NUMBER;
BEGIN
    L_TXDARE := GETCURRDATE;
    BEGIN
        SELECT TO_NUMBER(VARVALUE) INTO L_COUNT_LIMIT
        FROM SYSVAR
        WHERE VARNAME = 'SYNC_AITHER_REQERROR_COUNT'
        AND GRNAME = 'SYSTEM';
    EXCEPTION WHEN OTHERS THEN
        L_COUNT_LIMIT := 5;
    END;
    FOR REC IN (
        SELECT INF.*
        FROM SYN_AITHER_REQ INF
        WHERE INF.STATUS = 'P'
        AND COUNTREQ < L_COUNT_LIMIT
    )LOOP
        L_REQID := SEQ_CRBTXREQ.NEXTVAL;
        FOR REC2 IN
        (
            SELECT TRIM(REGEXP_SUBSTR(BODYREQ, '[^' || CHR(13) || CHR(10) || ']+', 1, LEVEL)) CINPUT
            FROM
            (
                SELECT * FROM SYN_AITHER_REQ WHERE AUTOID = REC.AUTOID
            )
            CONNECT BY INSTR(BODYREQ, CHR(13) || CHR(10), 1, LEVEL -1) > 0
        )LOOP
            L_FLDNAME := NULL;
            L_CVAL := NULL;
            FOR REC3 IN
            (
                SELECT TRIM(REGEXP_SUBSTR(CINPUT, '[^:]+', 1, LEVEL)) CVALUE
                FROM
                (
                    SELECT REC2.CINPUT FROM DUAL
                )
                CONNECT BY INSTR(CINPUT, ':', 1, LEVEL -1) > 0
            )LOOP
                IF L_FLDNAME IS NULL THEN
                    L_FLDNAME := UPPER(REC3.CVALUE);
                ELSE
                    L_CVAL := REC3.CVALUE;
                END IF;
            END LOOP;

            INSERT INTO CRBTXREQDTL (AUTOID, REQID, FLDNAME, CVAL, NVAL)
            VALUES (SEQ_CRBTXREQDTL.NEXTVAL, L_REQID, L_FLDNAME, L_CVAL, 0);

        END LOOP;

        INSERT INTO CRBTXREQ (REQID, OBJTYPE, OBJNAME, TRFCODE, REQCODE, OBJKEY, TXDATE, STATUS, BUSDATE)
        VALUES  (L_REQID, 'T', REC.TYPEREQ, REC.TYPEREQ, REC.TYPEREQ, REC.AUTOID, L_TXDARE, 'P', L_TXDARE);

        UPDATE SYN_AITHER_REQ SET STATUS = 'Q', COUNTREQ = COUNTREQ + 1 WHERE AUTOID = REC.AUTOID;
    END LOOP;
EXCEPTION WHEN OTHERS THEN
  PLOG.ERROR ('GEN_SYN_AITHER_REQ: ' || SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
END;
/
