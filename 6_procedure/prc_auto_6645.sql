SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE prc_auto_6645(P_AUTOID NUMBER, P_REFVAL VARCHAR2, P_ERR_CODE OUT VARCHAR2)
IS
    PKGCTX   PLOG.LOG_CTX;
    LOGROW   TLOGDEBUG%ROWTYPE;
    L_TXMSG     TX.MSG_RECTYPE;
    L_TLID VARCHAR2(100);
    L_TLTXCD VARCHAR2(10);
    L_STRDESC VARCHAR2(1000);
    L_CURRDATE DATE;
    L_ERR_PARAM VARCHAR2(1000);
    L_AMOUNT NUMBER;
BEGIN
    PLOG.SETBEGINSECTION(PKGCTX, 'PRC_AUTO_EA1108');
    L_CURRDATE := GETCURRDATE;
    L_TLID := SYSTEMNUMS.C_SYSTEM_USERID;

    L_TLTXCD := '6645';
    SELECT TXDESC INTO L_STRDESC FROM TLTX WHERE TLTXCD = L_TLTXCD;

    L_TXMSG.TLTXCD      := L_TLTXCD;
    L_TXMSG.MSGTYPE     := 'T';
    L_TXMSG.LOCAL       := 'N';
    L_TXMSG.TLID        := L_TLID;
    SELECT SYS_CONTEXT('USERENV', 'HOST'), SYS_CONTEXT('USERENV', 'IP_ADDRESS', 15)
    INTO L_TXMSG.WSNAME, L_TXMSG.IPADDRESS
    FROM DUAL;
    SELECT BRID
    INTO L_TXMSG.BRID
    FROM TLPROFILES WHERE TLID = L_TLID;
    L_TXMSG.OFF_LINE    := 'N';
    L_TXMSG.DELTD       := TXNUMS.C_DELTD_TXNORMAL;
    L_TXMSG.TXSTATUS    := TXSTATUSNUMS.C_TXCOMPLETED;
    L_TXMSG.MSGSTS      := '0';
    L_TXMSG.OVRSTS      := '0';
    L_TXMSG.BATCHNAME   := 'DAY';
    L_TXMSG.BUSDATE     := L_CURRDATE;
    L_TXMSG.TXDATE      := L_CURRDATE;

    FOR REC IN
    (
        SELECT DD.AFACCTNO, DD.ACCTNO, NVL(FEE.FEEAMOUNT, 0) + NVL(FEE.TAXAMOUNT, 0) AMOUNT, DD.BALANCE, FEE.CURRENCY FEECCYCD, DD.CCYCD DDCCYCD, FEE.REMARK REMARK_DESC, CF.CUSTODYCD, CF.CIFID, CF.FULLNAME
        FROM CFMAST CF,
        (
            SELECT * FROM DDMAST WHERE STATUS <> 'C'
        ) DD,
        (
            SELECT * FROM FEE_BOOKING_RESULT
            UNION ALL
            SELECT * FROM FEE_BOOKING_RESULTHIST
        ) FEE
        WHERE FEE.BANKACCOUNT = DD.REFCASAACCT
        AND DD.CUSTID = CF.CUSTID
        AND FEE.AUTOID = P_AUTOID
    )
    LOOP
        L_AMOUNT := 0;
        IF REC.FEECCYCD <> REC.DDCCYCD THEN
            BEGIN
                SELECT NVL(AITHERTXAMT, 0) INTO L_AMOUNT FROM SETTLE_FEE_LOG WHERE FEEBOOKINGAUOID = P_AUTOID AND STATUS = 'D';
            EXCEPTION WHEN OTHERS THEN
                PLOG.ERROR(PKGCTX, SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
                RAISE ERRNUMS.E_SYSTEM_ERROR;
            END;
        ELSE
            L_AMOUNT := REC.AMOUNT;
        END IF;

        BEGIN
            SELECT DT.NOTES
            INTO L_STRDESC
            FROM (
                SELECT * FROM CRBTXREQ WHERE TRFCODE IN ('SETTLEFEE')
                UNION ALL
                SELECT * FROM CRBTXREQHIST WHERE TRFCODE IN ('SETTLEFEE')
            ) DT
            WHERE DT.REFVAL = P_REFVAL;
        EXCEPTION WHEN OTHERS THEN
            L_STRDESC := '1207 Done (ID: ' || P_AUTOID || ')';
        END;

        SELECT SYSTEMNUMS.C_BATCH_PREFIXED || LPAD(SEQ_BATCHTXNUM.NEXTVAL, 8, '0')
        INTO L_TXMSG.TXNUM
        FROM DUAL;
        --CATXNUM
         L_TXMSG.TXFIELDS('02').DEFNAME := 'CATXNUM';
         L_TXMSG.TXFIELDS('02').TYPE := 'C';
         L_TXMSG.TXFIELDS('02').VALUE := '';

         --SECACCOUNT
         L_TXMSG.TXFIELDS('03').DEFNAME := 'SECACCOUNT';
         L_TXMSG.TXFIELDS('03').TYPE := 'C';
         L_TXMSG.TXFIELDS('03').VALUE := REC.AFACCTNO;

         --TRFTYPE
         L_TXMSG.TXFIELDS('04').DEFNAME := 'TRFTYPE';
         L_TXMSG.TXFIELDS('04').TYPE := 'C';
         L_TXMSG.TXFIELDS('04').VALUE := '1208DONE';

         --DESACCTNO
         L_TXMSG.TXFIELDS('05').DEFNAME := 'DESACCTNO';
         L_TXMSG.TXFIELDS('05').TYPE := 'C';
         L_TXMSG.TXFIELDS('05').VALUE := REC.ACCTNO;

         --TRFTYPE
         L_TXMSG.TXFIELDS('06').DEFNAME := 'TRFTYPE';
         L_TXMSG.TXFIELDS('06').TYPE := 'C';
         L_TXMSG.TXFIELDS('06').VALUE := 'TRFCICAMT';

         ----AMT
         L_TXMSG.TXFIELDS('09').DEFNAME := 'WDRTYPE';
         L_TXMSG.TXFIELDS('09').TYPE := 'C';
         L_TXMSG.TXFIELDS('09').VALUE := '023';

         ----AMOUNT
         L_TXMSG.TXFIELDS('10').DEFNAME := 'AMOUNT';
         L_TXMSG.TXFIELDS('10').TYPE := 'N';
         L_TXMSG.TXFIELDS('10').VALUE := L_AMOUNT;

         ----BALANCE
         L_TXMSG.TXFIELDS('11').DEFNAME := 'BALANCE';
         L_TXMSG.TXFIELDS('11').TYPE := 'N';
         L_TXMSG.TXFIELDS('11').VALUE := REC.BALANCE;

         --CCYCD
         L_TXMSG.TXFIELDS('21').DEFNAME := 'CCYCD';
         L_TXMSG.TXFIELDS('21').TYPE := 'C';
         L_TXMSG.TXFIELDS('21').VALUE := REC.DDCCYCD;

          --DESC
         L_TXMSG.TXFIELDS('30').DEFNAME := 'DESC';
         L_TXMSG.TXFIELDS('30').TYPE := 'C';
         L_TXMSG.TXFIELDS('30').VALUE := L_STRDESC;

         --CUSTODYCD
         L_TXMSG.TXFIELDS('88').DEFNAME := 'CUSTODYCD';
         L_TXMSG.TXFIELDS('88').TYPE := 'C';
         L_TXMSG.TXFIELDS('88').VALUE := REC.CUSTODYCD;

         --CIFID
         L_TXMSG.TXFIELDS('89').DEFNAME := 'CIFID';
         L_TXMSG.TXFIELDS('89').TYPE := 'C';
         L_TXMSG.TXFIELDS('89').VALUE := REC.CIFID;

         --CUSTNAME
         L_TXMSG.TXFIELDS('90').DEFNAME := 'CUSTNAME';
         L_TXMSG.TXFIELDS('90').TYPE := 'C';
         L_TXMSG.TXFIELDS('90').VALUE := REC.FULLNAME;

         IF TXPKS_#6645.FN_AUTOTXPROCESS(L_TXMSG, P_ERR_CODE, L_ERR_PARAM) <> SYSTEMNUMS.C_SUCCESS THEN
             PLOG.ERROR(PKGCTX, ' RUN ' || '6645' || ' GOT ' || P_ERR_CODE || ':' || P_ERR_CODE);
             L_ERR_PARAM := 'ERR: ' || SQLERRM || ' TRACE: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
             ROLLBACK;
             PLOG.SETENDSECTION(PKGCTX, 'PRC_AUTO_6645');
             RETURN;
         END IF;
    END LOOP;
    PLOG.SETENDSECTION(PKGCTX, 'PRC_AUTO_6645');
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    PLOG.ERROR(PKGCTX, SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
    PLOG.SETENDSECTION(PKGCTX, 'PRC_AUTO_6645');
    RAISE ERRNUMS.E_SYSTEM_ERROR;
END;
/
