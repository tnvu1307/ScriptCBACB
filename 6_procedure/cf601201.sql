SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE cf601201 (
   PV_REFCURSOR           IN OUT   PKG_REPORT.REF_CURSOR,
   OPT                    IN       VARCHAR2,
   BRID                   IN       VARCHAR2,
   F_DATE                 IN       VARCHAR2, /*TU NGAY */
   T_DATE                 IN       VARCHAR2, /*DEN NGAY */
   REPORT_NO              IN       VARCHAR2, -- SO CHUNG TU
   PV_CUSTODYCD           IN       VARCHAR2, /*SO TK LUU KY */
   P_SYMBOL               IN       VARCHAR2, -- CHUNG KHOAN
   P_SHARESOUTTYP         IN       VARCHAR2, -- KL LUU HANH
   P_SIGNUSER             IN       VARCHAR2 -- NGUOI KY
   )
IS
    -- GIAY DANG KY MA SO GIAO DICH
    -- PERSON      DATE                 COMMENTS
    -- ---------   ------               -------------------------------------------
    -- TRUONGLD    18-10-2019           CREATED
    V_STROPTION    VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
    V_STRBRID      VARCHAR2 (4);       -- USED WHEN V_NUMOPTION > 0

    V_FROMDATE          DATE;
    V_TRADINGDATE       DATE;
    V_CLEARDATE         DATE;
    V_TODATE            DATE;
    V_CURRDATE          DATE;
    V_NEXTDATE          DATE;
    V_CUSTODYCD         VARCHAR2(20);
    V_SYMBOL            VARCHAR2(50);
    V_BRADDRESS         VARCHAR2(200);
    V_BRADDRESS_EN      VARCHAR2(200);
    V_HEADOFFICE        VARCHAR2(200);
    V_HEADOFFICE_EN     VARCHAR2(200);
    V_EMAIL             VARCHAR2(200);
    V_PHONE             VARCHAR2(200);
    V_FAX               VARCHAR2(200);
    V_1IDCODE           VARCHAR2(200);
    V_1OFFICE           VARCHAR2(200);
    V_1REFNAME          VARCHAR2(200);
    V_2IDCODE           VARCHAR2(200);
    V_2OFFICE           VARCHAR2(200);
    V_2REFNAME          VARCHAR2(200);
    V_BUSSINESSID       VARCHAR2(200);
    -- TY LE SO HUU CO DONG LON
    V_MAJORSHAREHOLDER  NUMBER(20,4);
    V_CLEARDAY          NUMBER;
    V_AMCID             VARCHAR2(200);
    V_FRPREVDATE        DATE;
BEGIN

   V_STROPTION := OPT;

   V_CURRDATE   := GETCURRDATE;

    IF V_STROPTION = 'A' THEN
        V_STRBRID := '%';
    ELSIF V_STROPTION = 'B' THEN
        V_STRBRID := SUBSTR(BRID,1,2) || '__' ;
    ELSE
        V_STRBRID:=BRID;
    END IF;

    V_FROMDATE  :=     TO_DATE(F_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    V_FRPREVDATE := GETPREVDATE(V_FROMDATE,1);
    V_TODATE    :=     TO_DATE(T_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    V_CUSTODYCD := REPLACE(PV_CUSTODYCD,'.','');
    V_NEXTDATE  := GETPDATE_NEXT(V_FROMDATE,2);
    BEGIN
    SELECT AMCID INTO V_AMCID FROM CFMAST WHERE CUSTODYCD= V_CUSTODYCD;
    EXCEPTION
      WHEN OTHERS
       THEN V_AMCID := '';
    END;

    SELECT MAX(CASE WHEN  VARNAME='MAJORSHAREHOLDER' THEN VARVALUE ELSE '' END),
            MAX(CASE WHEN  VARNAME='CLEARDAY' THEN VARVALUE ELSE '' END)
       INTO V_MAJORSHAREHOLDER,V_CLEARDAY
    FROM SYSVAR WHERE VARNAME IN ('MAJORSHAREHOLDER','CLEARDAY');

    /*SELECT MAX(CASE WHEN  VARNAME='BRADDRESS' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='BRADDRESS_EN' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='HEADOFFICE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='HEADOFFICE_EN' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='EMAIL' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='PHONE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='FAX' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='MAJORSHAREHOLDER' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='CLEARDAY' THEN VARVALUE ELSE '' END)
       INTO V_BRADDRESS,V_BRADDRESS_EN,V_HEADOFFICE,V_HEADOFFICE_EN,V_EMAIL,V_PHONE,V_FAX, V_MAJORSHAREHOLDER, V_CLEARDAY
    FROM SYSVAR WHERE VARNAME IN ('BRADDRESS','BRADDRESS_EN','HEADOFFICE','HEADOFFICE_EN','EMAIL','PHONE','FAX', 'MAJORSHAREHOLDER', 'CLEARDAY');*/

    /*SELECT MAX(CASE WHEN  VARNAME='1IDCODE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='1OFFICE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='1REFNAME' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='2IDCODE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='2OFFICE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='2REFNAME' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='BUSSINESSID' THEN VARVALUE ELSE '' END)
        INTO V_1IDCODE, V_1OFFICE, V_1REFNAME, V_2IDCODE, V_2OFFICE, V_2REFNAME, V_BUSSINESSID
    FROM SYSVAR WHERE VARNAME IN ('1IDCODE','1OFFICE','1REFNAME','2IDCODE','2OFFICE','2REFNAME','BUSSINESSID');*/


    V_TRADINGDATE   := V_FROMDATE;
    V_CLEARDATE     := GETNEXTBUSINESSDATE(V_TRADINGDATE, V_CLEARDAY);

OPEN PV_REFCURSOR FOR
    SELECT MST.CUSTODYCD, -- TK GIAO DICH CK
           -- TK LUU KY CK
           MST.CIFID TRADINGACCOUNT,
           MST.TRADINGCODE,
           MST.FULLNAME,
           MST.SYMBOL,
           /*
           MST.ISSFULLNAME,
           MST.EN_ISSFULLNAME,
           MST.EXCHANGES,
           MST.EN_EXCHANGES,
           */
           MST.LISTINGQTTY,
           MST.PREV_LISTINGQTTY,
           -- KL TRUOC KHI GD
           MST.BEGINQTTY,
           -- KL SAU KHI GD
           MST.ENDQTTY,
           MST.ENDQTTY - MST.BEGINQTTY SLGD,
           MST.BUY_QTTY,
           MST.SELL_QTTY,
           -- TY LE SO HU TRUOC KHI GD
           (
            CASE WHEN (MST.LISTINGQTTY = 0 AND MST.BEGINQTTY > 0)  THEN 100
                 WHEN (MST.LISTINGQTTY = 0 AND MST.BEGINQTTY = 0)  THEN 0
                 ELSE ROUND(MST.BEGINQTTY / MST.LISTINGQTTY,2) * 100
            END
            ) BEGIN_RAT,
           -- TY LE SO HUU SAU KHI GD
           (
           CASE
                 WHEN (MST.LISTINGQTTY = 0 AND MST.ENDQTTY > 0) THEN 100
                 WHEN (MST.LISTINGQTTY = 0 AND MST.ENDQTTY = 0) THEN 0
                 ELSE ROUND(MST.ENDQTTY / MST.LISTINGQTTY,2) * 100
           END
           ) EN_RAT,
           -- KL MUA/BAN TRONG NGAY.
           --MST.INDAYQTTY,
           -- NGAY LAM THAY DOI TY LE SO HUU
           V_TRADINGDATE TRADINGDATE,
           -- NGAY KHONG CON LA CO DONG LON.
           V_CLEARDATE CLEARDATE
    FROM
    (
        SELECT CF.CUSTODYCD, CF.FULLNAME, CF.CIFID,CF.TRADINGCODE,
               NVL(SE.SYMBOL,'') SYMBOL,
               --NVL(SE.ISSFULLNAME,'') ISSFULLNAME,
               -- NVL(SE.EN_ISSFULLNAME,'') EN_ISSFULLNAME,
               --NVL(SE.EXCHANGES,'') EXCHANGES, NVL(SE.EN_EXCHANGES,'') EN_EXCHANGES,
               NVL(SI.LISTINGQTTY,0) LISTINGQTTY,
               NVL(SI.PREV_LISTINGQTTY,0) PREV_LISTINGQTTY,
               --NVL(SE.INDAYQTTY,'') INDAYQTTY,
               NVL(SE.BEGINQTTY,0) BEGINQTTY,
               NVL(SE.ENDQTTY,0) ENDQTTY,
               NVL(SE.BUY_QTTY,0) BUY_QTTY,
               NVL(SE.SELL_QTTY,0) SELL_QTTY

        FROM CFMAST CF,
        (
            SELECT SE.CUSTID, SE.AFACCTNO,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) SYMBOL,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END) CODEID,
                   --SB.ISSFULLNAME, SB.EN_ISSFULLNAME, SB.EXCHANGES, SB.EN_EXCHANGES, SB.LISTINGQTTY,
                   --SUM(-NVL(INDAY.NAMT,0)) INDAYQTTY,
                   SUM(SE.TRADE + (CASE WHEN SB.SYMBOL LIKE '%_WFT' THEN 0 ELSE SE.RECEIVING END) + SE.MORTAGE + SE.BLOCKED - NVL(INDAY.NAMT,0) - NVL(TR.NAMT,0)) BEGINQTTY,
                   SUM(SE.TRADE + (CASE WHEN SB.SYMBOL LIKE '%_WFT' THEN 0 ELSE SE.RECEIVING END) + SE.MORTAGE + SE.BLOCKED - NVL(TR.NAMT,0)) ENDQTTY,
                   MAX(BS.BUY_QTTY) BUY_QTTY,
                   MAX(BS.SELL_QTTY) SELL_QTTY
            FROM (
                SELECT SE.ACCTNO, SE.AFACCTNO, SE.CODEID, SE.CUSTID, SE.TRADE, SE.RECEIVING, SE.MORTAGE, SE.BLOCKED, SE.EMKQTTY, CF.CUSTATCOM
                FROM SEMAST SE, CFMAST CF
                WHERE SE.CUSTID = CF.CUSTID
                AND CF.CUSTATCOM = 'Y'
            ) SE,
            (
                SELECT SB.CODEID, SB.SYMBOL,
                 (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE,
                 SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                FROM SBSECURITIES SB, SBSECURITIES SB1
                WHERE SB.REFCODEID = SB1.CODEID(+)
                 AND SB.SECTYPE <> '004'
            )SB,
            -- PHAT SINH TU FROM DATE
            (
                SELECT CUSTODYCD, ACCTNO, SYMBOL,
                       SUM(CASE WHEN TXTYPE='C' THEN NAMT ELSE -NAMT END) NAMT
                FROM VW_SETRAN_GEN
                 WHERE BUSDATE > V_FROMDATE AND FIELD IN ('TRADE','RECEIVING','MORTAGE', 'BLOCKED')
                    AND SYMBOL LIKE P_SYMBOL||'%'
                 GROUP BY CUSTODYCD, ACCTNO, SYMBOL
            )TR,
            -- PHAT SINH TAI NGAY V_FROMDATE
            (
                SELECT CUSTODYCD, ACCTNO, SYMBOL,
                       SUM(CASE WHEN TXTYPE='C' THEN NAMT ELSE -NAMT END) NAMT
                FROM VW_SETRAN_GEN
                WHERE BUSDATE = V_FROMDATE AND FIELD IN ('TRADE','RECEIVING','MORTAGE', 'BLOCKED')
                    AND SYMBOL LIKE P_SYMBOL||'%'
                GROUP BY CUSTODYCD, ACCTNO, SYMBOL
            )INDAY,
            -- KL MUA/BAN TAI NGAY FROMDATE
            (
                SELECT CUSTODYCD, AFACCTNO, SYMBOL, CODEID, TXDATE, SEACCTNO,
                       SUM(CASE WHEN EXECTYPE='NB' THEN EXECQTTY ELSE 0 END) BUY_QTTY,
                       SUM(CASE WHEN EXECTYPE='NS' THEN EXECQTTY ELSE 0 END) SELL_QTTY
                FROM VW_ODMAST_ALL
                WHERE TXDATE = V_FROMDATE
                GROUP BY CUSTODYCD, AFACCTNO, SYMBOL, CODEID, TXDATE, SEACCTNO
                HAVING SUM(CASE WHEN EXECTYPE='NB' THEN EXECQTTY ELSE 0 END)  + SUM(CASE WHEN EXECTYPE='NS' THEN EXECQTTY ELSE 0 END) <> 0
            )BS
            WHERE SE.CODEID = SB.CODEID
            AND (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) LIKE P_SYMBOL||'%'
            AND SE.ACCTNO = TR.ACCTNO (+)
            AND SE.ACCTNO = INDAY.ACCTNO (+)
            AND SE.ACCTNO = BS.SEACCTNO (+)
            GROUP BY SE.CUSTID, SE.AFACCTNO,(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END),(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END)

            UNION ALL

            SELECT SE.CUSTID, SE.AFACCTNO,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) SYMBOL,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END) CODEID,
                   SUM(CASE WHEN SE.TXDATE = V_FRPREVDATE THEN SE.TRADE ELSE 0 END) BEGINQTTY,
                   SUM(CASE WHEN SE.TXDATE = V_NEXTDATE THEN SE.TRADE ELSE 0 END) ENDQTTY,
                   SUM(CASE WHEN SE.TXDATE = V_FRPREVDATE THEN SE.TRADE ELSE 0 END) BUY_QTTY,
                   SUM(CASE WHEN SE.TXDATE = V_NEXTDATE THEN SE.TRADE ELSE 0 END) SELL_QTTY
            FROM SENOCUSTATCOM SE, CFMAST CF,
            (
                SELECT SB.CODEID, SB.SYMBOL, (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE, SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                FROM SBSECURITIES SB, SBSECURITIES SB1
                WHERE SB.REFCODEID = SB1.CODEID(+)
                AND SB.SECTYPE <> '004'
            )SB
            WHERE SE.CUSTID = CF.CUSTID
            AND CF.CUSTATCOM = 'N'
            AND SE.TXDATE BETWEEN V_FRPREVDATE AND V_NEXTDATE
            AND SE.CODEID = SB.CODEID
            AND (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) LIKE P_SYMBOL||'%'
            GROUP BY SE.CUSTID, SE.AFACCTNO,(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END),(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END)
        ) SE,
        (
            SELECT CODEID,
            NVL(SUM(CASE WHEN P_SHARESOUTTYP='O' AND HISTDATE=V_FROMDATE THEN OLDCIRCULATINGQTTY
                         WHEN P_SHARESOUTTYP <>'O' AND HISTDATE=V_FROMDATE THEN NEWCIRCULATINGQTTY ELSE 0 END),0) LISTINGQTTY,
            NVL(SUM(CASE WHEN P_SHARESOUTTYP='O' AND HISTDATE=V_FRPREVDATE THEN OLDCIRCULATINGQTTY
                         WHEN P_SHARESOUTTYP <>'O' AND HISTDATE=V_FRPREVDATE THEN NEWCIRCULATINGQTTY ELSE 0 END),0) PREV_LISTINGQTTY
            FROM VW_SECURITIES_INFO_HIST
            WHERE SYMBOL LIKE P_SYMBOL
            AND HISTDATE BETWEEN V_FRPREVDATE AND V_FROMDATE
            GROUP BY CODEID
        ) SI
        WHERE CF.CUSTID = SE.CUSTID (+)
        AND SE.CODEID = SI.CODEID(+) -- AND SI.CODEID = NVL(SE.CODEID, '')
        AND (CF.CUSTODYCD = V_CUSTODYCD OR CF.AMCID = V_AMCID)
        AND CF.STATUS <> 'C'
        AND SUBSTR(CF.CUSTODYCD,0,3) <> 'OTC'
    )MST ORDER BY MST.CUSTODYCD;

EXCEPTION
  WHEN OTHERS
   THEN
      PLOG.ERROR ('CF601201: ' || SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
      RETURN;
END;
/
