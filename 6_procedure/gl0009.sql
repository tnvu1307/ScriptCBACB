SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE GL0009 (
   PV_REFCURSOR   IN OUT   PKG_REPORT.REF_CURSOR,
   OPT            IN       VARCHAR2 Default 'A' ,
   BRID           IN       VARCHAR2 Default 'ALL',
   F_DATE         IN       VARCHAR2,
   T_DATE         IN       VARCHAR2,
   ACCTNO         IN       VARCHAR2,
   TASKCD         IN       VARCHAR2,
   DEPTCD         IN       VARCHAR2,
   CUSTID         IN       VARCHAR2
  )
IS
--
-- PURPOSE: BRIEFLY EXPLAIN THE FUNCTIONALITY OF THE PROCEDURE
--
-- MODIFICATION HISTORY
-- PERSON      DATE    COMMENTS
-- NAMNT   21-NOV-06  CREATED
-- ---------   ------  -------------------------------------------
   V_STROPTION           VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
   V_STRBRID             VARCHAR2 (4);              -- USED WHEN V_NUMOPTION > 0
   V_STRTASKCD           VARCHAR2 (6);
   V_STRDEPTCD           VARCHAR2 (6);
   V_STRACCTNO           VARCHAR2 (20);
   V_STRCUSTID           VARCHAR2 (20);
-- DECLARE PROGRAM VARIABLES AS SHOWN ABOVE
BEGIN
   V_STROPTION := OPT;

   IF (V_STROPTION <> 'A') AND   (BRID <> 'ALL')
   THEN
      V_STRBRID := BRID;
   ELSE
      V_STRBRID := '%%';
   END IF;
 
   -- GET REPORT'S PARAMETERS


    V_STRACCTNO := ACCTNO||'%';

   IF (TASKCD <> 'ALL')
   THEN
      V_STRTASKCD := TASKCD;
   ELSE
      V_STRTASKCD := '%%';
   END IF;

   IF (DEPTCD <> 'ALL')
   THEN
      V_STRDEPTCD := DEPTCD;
   ELSE
      V_STRDEPTCD := '%%';
   END IF;

     IF (CUSTID <> 'ALL')
   THEN
      V_STRCUSTID := CUSTID;
   ELSE
      V_STRCUSTID := '%%';
   END IF;



   -- END OF GETTING REPORT'S PARAMETERS

   -- GET REPORT'S DATA

  OPEN PV_REFCURSOR
       FOR
--SELECT NVL(AMT.CAMT,0) CAMT, NVL(AMT.DAMT,0) DAMT,cf.CUSTID,cf.FULLNAME,NVL((BE_BALANCE.BE_CAMT-BE_BALANCE.BE_DAMT),0) BE_BALNACE

SELECT NVL(AMT.CAMT,0) CAMT, NVL(AMT.DAMT,0) DAMT,cf.CUSTID,cf.FULLNAME,
 (case when NVL((BE_BALANCE.BE_CAMT-BE_BALANCE.BE_DAMT),0)>0 then  NVL((BE_BALANCE.BE_CAMT-BE_BALANCE.BE_DAMT),0) else 0 end ) C_BE_BALNACE,
 (case when NVL((BE_BALANCE.BE_CAMT-BE_BALANCE.BE_DAMT),0)<0 then  NVL((-BE_BALANCE.BE_CAMT+BE_BALANCE.BE_DAMT),0) else 0 end ) D_BE_BALNACE,
 (case when nvl(BE_BALANCE.BE_CAMT,0)-nvl(BE_BALANCE.BE_DAMT,0)+NVL(AMT.CAMT,0)-NVL(AMT.DAMT,0)>0 then  nvl(BE_BALANCE.BE_CAMT,0)-nvl(BE_BALANCE.BE_DAMT,0)+NVL(AMT.CAMT,0)-NVL(AMT.DAMT,0) else 0 end ) C_EN_BALNACE,
 (case when nvl(BE_BALANCE.BE_CAMT,0)-nvl(BE_BALANCE.BE_DAMT,0)+NVL(AMT.CAMT,0)-NVL(AMT.DAMT,0)<0 then  abs( nvl(BE_BALANCE.BE_CAMT,0)-nvl(BE_BALANCE.BE_DAMT,0)+NVL(AMT.CAMT,0)-NVL(AMT.DAMT,0)) else 0 end ) D_EN_BALNACE
FROM cfmast cf,
-- PHAT SINH
(
SELECT SUM(BALANCE.CAMT) CAMT,SUM(BALANCE.DAMT) DAMT, MI.CUSTID
FROM
(SELECT  TL.TLTXCD , TL.BUSDATE,TL.TXNUM,TL.TXDESC ,GL.ACCTNO ,GL.dorc ,GL.subtxno ,TL.txdate
  ,(CASE WHEN GL.DORC ='C' THEN GL.AMT ELSE 0 END )CAMT ,
   (CASE WHEN GL.DORC ='D' THEN GL.AMT ELSE 0 END )DAMT
        FROM GLTRAN GL, TLLOG TL
        WHERE GL.TXNUM =TL.TXNUM
        AND TL.DELTD <>'Y'
       AND TL.BUSDATE <=TO_DATE (T_DATE ,'DD/MM/YYYY')
       AND TL.BUSDATE >=TO_DATE (F_DATE ,'DD/MM/YYYY')
       AND GL.acctno LIKE  V_STRACCTNO

       AND TL.BRID LIKE V_STRBRID
  UNION ALL
SELECT   TL.TLTXCD ,TL.BUSDATE,TL.TXNUM,TL.TXDESC ,GL.ACCTNO,GL.dorc ,GL.subtxno ,TL.txdate
,(CASE WHEN GL.DORC ='C' THEN GL.AMT ELSE 0 END )CAMT ,
 (CASE WHEN GL.DORC ='D' THEN GL.AMT ELSE 0 END )DAMT
        FROM GLTRANA GL, TLLOGALL TL
        WHERE GL.TXNUM =TL.TXNUM
        AND GL.TXDATE =TL.TXDATE
        AND TL.DELTD <>'Y'
        AND TL.BUSDATE <=TO_DATE (T_DATE ,'DD/MM/YYYY')
        AND TL.BUSDATE >=TO_DATE (F_DATE ,'DD/MM/YYYY')
        AND GL.acctno LIKE  V_STRACCTNO
        AND TL.BRID LIKE V_STRBRID

) BALANCE,
(SELECT TXDATE ,TXNUM,SUBTXNO,DORC ,ACCTNO ,MAX(CUSTID) CUSTID,MAX(CUSTNAME ) CUSTNAME,
 max(TASKCD)TASKCD,max(DEPTCD) DEPTCD ,max(DESCRIPTION) DESCRIPTION
 FROM  MITRAN
 WHERE  nvl(taskcd,'-') LIKE V_STRTASKCD
 AND nvl(DEPTCD,'-') LIKE V_STRDEPTCD
 AND acctno LIKE  V_STRACCTNO -- 04/07/2009 DucNV tungning
  GROUP BY TXDATE ,TXNUM,SUBTXNO,DORC ,ACCTNO)MI
WHERE MI.TXDATE=BALANCE.TXDATE
AND MI.TXNUM =BALANCE.TXNUM
AND MI.subtxno = BALANCE.subtxno
AND MI.dorc = BALANCE.dorc
AND MI.acctno= BALANCE.acctno
GROUP BY CUSTID )AMT
,
-- DAU KY
(
SELECT NVL(SUM(BALANCE.CAMT),0) BE_CAMT, NVL( SUM(BALANCE.DAMT) ,0) BE_DAMT, MI.CUSTID
FROM
(
SELECT   TL.TLTXCD ,TL.BUSDATE,TL.TXNUM,TL.TXDESC ,GL.ACCTNO,GL.dorc ,GL.subtxno ,TL.txdate
,(CASE WHEN GL.DORC ='C' THEN GL.AMT ELSE 0 END )CAMT ,
 (CASE WHEN GL.DORC ='D' THEN GL.AMT ELSE 0 END )DAMT
        FROM GLTRANA GL, TLLOGALL TL
        WHERE GL.TXNUM =TL.TXNUM
        AND GL.TXDATE =TL.TXDATE
        AND TL.DELTD <>'Y'
       AND TL.BUSDATE < TO_DATE (F_DATE ,'DD/MM/YYYY')
       AND GL.acctno LIKE  V_STRACCTNO
        AND TL.BRID LIKE V_STRBRID

) BALANCE,

(SELECT TXDATE ,TXNUM,SUBTXNO,DORC ,ACCTNO ,MAX(CUSTID) CUSTID,MAX(CUSTNAME ) CUSTNAME,
 max(TASKCD)TASKCD,max(DEPTCD) DEPTCD ,max(DESCRIPTION) DESCRIPTION
 FROM  MITRAN
 WHERE  nvl(taskcd,'-') LIKE V_STRTASKCD
 AND nvl(DEPTCD,'-') LIKE V_STRDEPTCD
  AND acctno LIKE  V_STRACCTNO -- 04/07/2009 DucNV tungning
  GROUP BY TXDATE ,TXNUM,SUBTXNO,DORC ,ACCTNO)MI
WHERE MI.TXDATE=BALANCE.TXDATE
AND MI.TXNUM =BALANCE.TXNUM
AND MI.subtxno = BALANCE.subtxno
AND MI.dorc = BALANCE.dorc
AND MI.acctno= BALANCE.acctno
GROUP BY CUSTID
)BE_BALANCE
WHERE CF.CUSTID = BE_BALANCE.CUSTID(+)
AND  CF.CUSTID= AMT.CUSTID(+)
AND( NVL((BE_BALANCE.BE_CAMT-BE_BALANCE.BE_DAMT),0)<>0 OR  NVL(AMT.CAMT,0) <>0 OR NVL(AMT.DAMT,0)<>0 )
AND CF.CUSTID LIKE V_STRCUSTID ;



 EXCEPTION
   WHEN OTHERS
   THEN
      RETURN;
END;                                                              -- PROCEDURE
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
/
