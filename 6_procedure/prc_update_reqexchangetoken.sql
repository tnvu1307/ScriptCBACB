SET DEFINE OFF;
CREATE OR REPLACE
PROCEDURE prc_update_reqexchangetoken(P_AUTOID NUMBER, P_EXCHANGETOKEN VARCHAR2, P_STATUS VARCHAR2, P_BODY VARCHAR2, P_ERROR_MSG VARCHAR2,P_ERR_CODE IN OUT VARCHAR2, P_ERR_PARAM IN OUT VARCHAR2)
IS
    L_COREBANK_USERID VARCHAR2(50);
BEGIN
    P_ERR_CODE  := SYSTEMNUMS.C_SUCCESS;

    IF P_STATUS = 'C' THEN
        FOR REC IN (
            SELECT * FROM TLPROFILES_REQ_EXCHANGETOKEN WHERE AUTOID = P_AUTOID
        )
        LOOP
            FOR REC_J IN (
                SELECT *
                FROM (
                    SELECT NVL(P_BODY, '{}') JSON FROM DUAL
                ) DT,
                JSON_TABLE(
                    DT.JSON, '$' COLUMNS (
                        PERSONNUMBER VARCHAR2(200) PATH '$.personNumber'
                    )
                ) AS JT
            ) LOOP
                L_COREBANK_USERID := REC_J.PERSONNUMBER;
            END LOOP;

            UPDATE TLPROFILES
            SET EXCHANGETOKEN = P_EXCHANGETOKEN,
                COREBANK_USERID = L_COREBANK_USERID
            WHERE TLID = REC.TLID;
        END LOOP;
    END IF;

    UPDATE TLPROFILES_REQ_EXCHANGETOKEN
    SET STATUS = P_STATUS,
    ERROR_MSG = P_ERROR_MSG
    WHERE AUTOID = P_AUTOID;

EXCEPTION WHEN OTHERS THEN
    P_ERR_CODE := ERRNUMS.C_SYSTEM_ERROR;
    PLOG.ERROR('PRC_UPDATE_REQEXCHANGETOKEN ERR: ' || SQLERRM || ' TRACE: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );
END;
/
