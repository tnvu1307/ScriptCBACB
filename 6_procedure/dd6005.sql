SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE dd6005(
   PV_REFCURSOR           IN OUT   PKG_REPORT.REF_CURSOR,
   OPT                    IN       VARCHAR2,
   BRID                   IN       VARCHAR2,
   F_DATE                 IN       VARCHAR2, /*TU NGAY */
   T_DATE                 IN       VARCHAR2, /*DEN NGAY */
   P_CUSTODYCD            IN       VARCHAR2 /*SO TAI KHOAN LUU KY */
   )
IS
    -- REPORT ON THE DAY BECOME/IS NO LONGER MAJOR SHAREHOLDER, INVESTORS HOLDING 5% OR MORE OF SHARES
    -- PERSON      DATE                 COMMENTS
    -- ---------   ------               -------------------------------------------
    -- DU.PHAN    23-10-2019            CREATED
    -- NAM.LY     18-02-2020            MODIFIED
    V_STROPTION    VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
    V_STRBRID      VARCHAR2 (4);       -- USED WHEN V_NUMOPTION > 0
    V_CUSTODYCD         VARCHAR2(20);
    V_FROMDATE          DATE;
    V_TODATE            DATE;
    V_CURRDATE          DATE;
    V_NEXTDATE          DATE;
    V_PREVDATE          DATE;
    V_FAFULLNAME        VARCHAR2 (200);
    V_DUEDATE           VARCHAR2 (10);
    V_ORSTATUS          VARCHAR2 (200);
BEGIN
    V_STROPTION := OPT;
    V_CURRDATE   := GETCURRDATE;
    IF V_STROPTION = 'A' THEN
        V_STRBRID := '%';
    ELSIF V_STROPTION = 'B' THEN
        V_STRBRID := SUBSTR(BRID,1,2) || '__' ;
    ELSE
        V_STRBRID:=BRID;
    END IF;
    --
    V_CUSTODYCD := REPLACE(P_CUSTODYCD,'.','');
    IF (V_CUSTODYCD = 'ALL') THEN
        V_CUSTODYCD := '%';
    END IF;
    V_FROMDATE  := TO_DATE(F_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    V_TODATE    := TO_DATE(T_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    --
    SELECT EN_CDCONTENT
    INTO V_ORSTATUS
    FROM ALLCODE
    WHERE CDNAME='ORSTATUS' AND CDVAL='7';
-------------------
OPEN PV_REFCURSOR FOR
    --NAM.LY
    SELECT  TO_CHAR(OD.TXDATE,'DD-MON-YYYY') TRADINGDATE,
            TO_CHAR((CASE WHEN OD.EXECTYPE IN ('NS','NB') THEN OD.CLEARDATE ELSE OD.TXDATE END),'DD-MON-YYYY') VALUEDATE,
            TLA.TLTXCD TRANSACTIONNO,
            TL.EN_TXDESC TRANSACTIONDESCRIPTION,
            OD.TRANSACTIONCODE,
            DECODE(CF.COUNTRY,'234',SUBSTR(CF.CUSTODYCD,5),CF.TRADINGCODE) STC,
            CF.FULLNAME PORTFOLIONAME,
            CF.CIFID PORTFOLIONUMER,
            FA_AMC.ENGLISHNAME CLIENTSNAME,
            TO_CHAR(UTILS.so_thanh_chu2(NVL(OD.EXECQTTY,0))) TRADINGQUANTITY,
            OD.SYMBOL TICKER,
            SB.ISINCODE ISIN,
            TO_CHAR(UTILS.so_thanh_chu2(NVL((CASE WHEN OD.EXECQTTY <> 0 THEN  OD.EXECAMT/OD.EXECQTTY ELSE 0 END),0))) PRICE,
            NVL(OD.CCYCD, DD.CCYCD) CCYCD,
            TO_CHAR(UTILS.so_thanh_chu2(NVL(OD.EXECAMT,0))) AMOUNTINTRADECURRENCY, --trung.luu 03-12-2020 SHBVNEX-1681 sua ham UTILS.so_thanh_chu => UTILS.so_thanh_chu2(do bi lam tron)
            TO_CHAR(UTILS.so_thanh_chu2(NVL(OD.FEEAMT + OD.TAXAMT,0))) TOTALOFCHARGES,
            TO_CHAR(UTILS.so_thanh_chu2(NVL(OD.NETAMOUNT,0))) NETAMOUNT,
            (CASE WHEN OD.EXECTYPE IN ('NB','NS') THEN FA_BRK.ENGLISHNAME ELSE '' END) BROKERSNAME,
            V_ORSTATUS TRANSACTIONSTATUS,
            TLA.TLID   MAKERID,
            TLA.OFFID CHECKERID
    FROM VW_TLLOG_ALL TLA, FAMEMBERS FA_BRK, FAMEMBERS FA_AMC, SBSECURITIES SB, DDMAST DD, FABROKERAGE FAB,TLTX TL,
         (
            SELECT  ODA.CLEARDATE, ODA.TXDATE, ODA.EXECTYPE, ODA.SYMBOL, ODA.EXECQTTY, ODA.EXECAMT, ODA.FEEAMT, ODA.TAXAMT,
                    ODA.NETAMOUNT, ODA.TXNUM, ODA.CUSTID, ODA.CUSTODYCD, ODA.MEMBER, ODA.DELTD,
                    DECODE(ODA.EXECTYPE,'NS','SELL-BOND','NB','BUY-BOND') TRANSACTIONCODE, '' CCYCD
            FROM VW_ODMAST_ALL ODA
            WHERE ODA.EXECTYPE IN ('NS','NB') AND ODA.ODTYPE = 'ODG'
            UNION ALL
            SELECT  ODA.CLEARDATE, ODA.TXDATE, ODA.EXECTYPE, ODA.SYMBOL, ODA.EXECQTTY, ODA.EXECAMT, ODA.FEEAMT, ODA.TAXAMT,
                    ODA.NETAMOUNT, ODA.TXNUM, ODA.CUSTID, ODA.CUSTODYCD, ODA.MEMBER, ODA.DELTD,
                    DECODE(ODA.EXECTYPE,'NS','SELL-EQUITY','NB','BUY-EQUITY') TRANSACTIONCODE, '' CCYCD
            FROM VW_ODMAST_ALL ODA
            WHERE ODA.EXECTYPE IN ('NS','NB') AND ODA.ODTYPE <> 'ODG'
            UNION ALL
            SELECT  OTC.TXDATE CLEARDATE, OTC.TXDATE, OTC.EXECTYPE, OTC.SYMBOL, OTC.QTTY EXECQTTY, OTC.AMOUNT EXECAMT, OTC.FEEAMT, 0 TAXAMT,
                    OTC.AMOUNT NETAMOUNT, OTC.TXNUM,  OTC.CUSTID, '' CUSTODYCD, '' MEMBER, OTC.DELTD,
                    DECODE(OTC.EXECTYPE,'IT','BUY-OTC-EQUITY','WT','SELL-OTC-EQUITY','ODD-LOT') TRANSACTIONCODE, '' CCYCD
            FROM VW_FEETRANREPAIR_ALL OTC
            WHERE (OTC.EXECTYPE IN ('IT','WT') OR OTC.ORDERID = '2266')
            UNION ALL
            SELECT  OPN.OPNTXDATE CLEARDATE, OPN.OPNTXDATE TXDATE, '' EXECTYPE, OPN.SYMBOL, OPN.QTTY EXECQTTY, 0 EXECAMT, 0 FEEAMT, 0 TAXAMT,
                    0 NETAMOUNT, OPN.OPNTXNUM TXNUM,  '' CUSTID, OPN.CUSTODYCD, '' MEMBER, OPN.DELTD,
                    'SEC-IN (DEPOSIT) (BOND, SHARE CERTIFICATES, CD)' TRANSACTIONCODE, '' CCYCD
            FROM DOCSTRANSFER OPN
            GROUP BY OPN.OPNTXDATE, OPN.SYMBOL, OPN.QTTY, OPN.OPNTXNUM, OPN.CUSTODYCD, OPN.DELTD
            UNION ALL
            SELECT  CLS.CLSTXDATE CLEARDATE, CLS.CLSTXDATE TXDATE, '' EXECTYPE, CLS.SYMBOL, CLS.QTTY EXECQTTY, 0 EXECAMT, 0 FEEAMT, 0 TAXAMT,
                    0 NETAMOUNT, CLS.CLSTXNUM TXNUM,  '' CUSTID, CLS.CUSTODYCD, '' MEMBER, CLS.DELTD,
                    'SEC-OUT (WITHDRAW) (BOND, SHARE CERTIFICATES, CD)' TRANSACTIONCODE, '' CCYCD
            FROM DOCSTRANSFER CLS
            WHERE CLS.STATUS ='CLS'
            GROUP BY CLS.CLSTXDATE, CLS.SYMBOL, CLS.QTTY, CLS.CLSTXNUM, CLS.CUSTODYCD, CLS.DELTD
            UNION ALL
            SELECT  DOM.TXDATE CLEARDATE, DOM.TXDATE, '' EXECTYPE, '' SYMBOL, 0 EXECQTTY, DOM.NAMT EXECAMT, SUM(NVL(FEE.FEEAMT,0)) FEEAMT, SUM(NVL(FEE.VATAMT,0)) TAXAMT,
                    0 NETAMOUNT, DOM.TXNUM,  '' CUSTID, DOM.CUSTODYCD, '' MEMBER, DOM.DELTD,
                    'DOMESTIC OUTWARD' TRANSACTIONCODE, '' CCYCD
            FROM VW_DDTRAN_GEN DOM, VW_FEETRAN_ALL FEE
            WHERE FEE.FEETYPES = 'OTHER'
                  AND FEE.SUBTYPE = '014'
                  AND FEE.DELTD <> 'Y'
                  AND DOM.FIELD = 'BALANCE'
                  AND DOM.TXTYPE = 'D'
                  AND DOM.TLTXCD = '6621'
                  AND DOM.CUSTODYCD = FEE.CUSTODYCD (+)
                  AND DOM.TXDATE = FEE.TXDATE (+)
                  AND DOM.TXNUM = FEE.TXNUM (+)
            GROUP BY DOM.TXDATE, DOM.TXNUM, DOM.NAMT, DOM.CUSTODYCD, DOM.DELTD

            UNION ALL

            SELECT FE.TXDATE CLEARDATE, LOG.TXDATE, '' EXECTYPE, '' SYMBOL, 0 EXECQTTY, FE.TXAMT EXECAMT, FE.FEEAMT, FE.VATAMT TAXAMT, 0 NETAMOUNT,
                   FE.TXNUM, '' CUSTID, FE.CUSTODYCD, '' MEMBER, FE.DELTD,
                   (CASE WHEN LOG.TLTXCD = '6702' THEN 'OVERSEAS OUTWARD' ELSE 'OVERSEAS INWARD' END) TRANSACTIONCODE, LOGFLD.CVALUE CCYCD
            FROM VW_FEETRAN_ALL FE, VW_TLLOG_ALL LOG, VW_TLLOGFLD_ALL LOGFLD
            WHERE FE.TXDATE = LOG.BUSDATE AND FE.TXNUM = LOG.TXNUM
            AND LOG.TXDATE = LOGFLD.TXDATE AND LOG.TXNUM = LOGFLD.TXNUM
            AND LOGFLD.fldcd = '05'
            AND LOG.TLTXCD IN ('6702','6703')

        ) OD, CFMAST CF, AFMAST AF
    WHERE     TLA.TXNUM = OD.TXNUM
          AND TLA.TXDATE = OD.TXDATE
          AND TLA.TLTXCD = TL.TLTXCD
          AND OD.CLEARDATE BETWEEN V_FROMDATE AND V_TODATE
          AND CF.CUSTODYCD LIKE V_CUSTODYCD
          AND (CASE WHEN OD.CUSTID IS NOT NULL AND OD.CUSTID = CF.CUSTID THEN 1
                    WHEN OD.CUSTODYCD IS NOT NULL AND OD.CUSTODYCD = CF.CUSTODYCD THEN 1
                    ELSE 0
               END) = 1
          AND CF.CUSTID = AF.CUSTID
          AND CF.CUSTID = DD.CUSTID
          AND AF.ACCTNO = DD.AFACCTNO
          AND DD.CCYCD = 'VND'
          AND DD.ISDEFAULT = 'Y'
          AND OD.DELTD <> 'Y'
          AND OD.SYMBOL = SB.SYMBOL (+)
          AND OD.MEMBER = FA_BRK.AUTOID (+)
          AND FA_BRK.ROLES (+) = 'BRK'
          AND CF.CUSTODYCD = FAB.CUSTODYCD (+)
          AND FAB.BRKID (+) = FA_BRK.AUTOID
          AND CF.AMCID = FA_AMC.AUTOID (+)
          AND FA_AMC.ROLES (+) = 'AMC'
    GROUP BY TLA.AUTOID, OD.TXDATE, CF.FULLNAME, CF.CIFID, TLA.TLTXCD, TL.EN_TXDESC, OD.CLEARDATE, CF.COUNTRY, CF.CUSTODYCD, CF.TRADINGCODE, SB.TRADEPLACE,
          FA_BRK.ENGLISHNAME, FA_AMC.ENGLISHNAME, OD.EXECQTTY, OD.SYMBOL, SB.ISINCODE, OD.EXECTYPE, OD.TRANSACTIONCODE, TLA.TLID, TLA.OFFID, OD.EXECAMT, OD.FEEAMT, OD.TAXAMT, OD.NETAMOUNT, DD.CCYCD, OD.CCYCD
    ORDER BY TLA.AUTOID;
EXCEPTION
  WHEN OTHERS
   THEN
      PLOG.ERROR ('DD6005: ' || SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
      RETURN;
END;
/
