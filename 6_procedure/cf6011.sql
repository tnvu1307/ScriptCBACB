SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE cf6011(
   PV_REFCURSOR           IN OUT   PKG_REPORT.REF_CURSOR,
   OPT                    IN       VARCHAR2,
   BRID                   IN       VARCHAR2,
   F_DATE                 IN       VARCHAR2, /*TU NGAY */
   P_REPORTNO             IN       VARCHAR2,
   T_DATE                 IN       VARCHAR2, /*DEN NGAY */
   P_CUSTODYCD            IN       VARCHAR2, /*SO TK LUU KY */
   P_SYMBOL               IN       VARCHAR2, /*MA CHUNG KHOAN */
   P_SHARESOUTTYP         IN       VARCHAR2, /*KL LUU HANH */
   P_SIGNTYPE             IN       VARCHAR2 /*NGUOI KY */
   )
IS
    -- REPORT ON THE DAY BECOME/IS NO LONGER MAJOR SHAREHOLDER, INVESTORS HOLDING 5% OR MORE OF SHARES
    -- PERSON      DATE                 COMMENTS
    -- ---------   ------               -------------------------------------------
    -- DU.PHAN    23-10-2019           CREATED
    V_STROPTION    VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
    V_STRBRID      VARCHAR2 (4);       -- USED WHEN V_NUMOPTION > 0

    V_FROMDATE          DATE;
    V_TODATE            DATE;
    V_CURRDATE          DATE;
    V_NEXTDATE          DATE;
    V_PREVDATE          DATE;
    V_CUSTODYCD         VARCHAR2(20);
    V_SYMBOL            VARCHAR2(50);
    V_BRADDRESS         VARCHAR2(200);
    V_BRADDRESS_EN      VARCHAR2(200);
    V_HEADOFFICE        VARCHAR2(200);
    V_HEADOFFICE_EN     VARCHAR2(200);
    V_EMAIL             VARCHAR2(200);
    V_PHONE             VARCHAR2(200);
    V_FAX               VARCHAR2(200);
    V_1IDCODE           VARCHAR2(200);
    V_1OFFICE           VARCHAR2(200);
    V_1REFNAME          VARCHAR2(200);
    V_2IDCODE           VARCHAR2(200);
    V_2OFFICE           VARCHAR2(200);
    V_2REFNAME          VARCHAR2(200);
    V_BUSSINESSID       VARCHAR2(200);
    V_AMCID             VARCHAR2(20);
    V_AMCFULNAME        VARCHAR2(200);
    V_LISTFUND          VARCHAR2(4000);
    V_COUNTRYAMC        VARCHAR2(200);
    V_COUNTRYAMC_EN     VARCHAR2(200);
    -- TY LE SO HUU CO DONG LON
    V_MAJORSHAREHOLDER  NUMBER(20,4);
    V_CLEARDAY          NUMBER;
    V_QTTY_RELATED      NUMBER;
    V_PERCENT_RELATED   NUMBER;
    V_PREVQTTY_IN   NUMBER;
    V_PREVPERCENT_IN   NUMBER;
    V_INDAYQTTY_IN NUMBER;
    V_INDAY_TEXT_IN VARCHAR2(200);
    V_INDAY_TEXT_IN_EN VARCHAR2(200);
    V_ENDQTTY_IN NUMBER;
    V_ENDPERCENT_IN NUMBER;
 -- ISSFULLNAME,EN_ISSFULLNAME,EXCHANGES,EN_EXCHANGES,CFCOUNTRY,CFCOUNTRY_EN,CFFULLNAME,CFIDPLACE,CFIDINFO,CFBANKATADDRESS,CFMOBILE,CFFAX,CFEMAIL
    V_ISSFULLNAME VARCHAR2(200);
    V_EN_ISSFULLNAME VARCHAR2(200);
    V_EXCHANGES VARCHAR2(200);
    V_EN_EXCHANGES VARCHAR2(200);
    V_CFCOUNTRY VARCHAR2(200);
    V_CFCOUNTRY_EN VARCHAR2(200);
    V_CFFULLNAME VARCHAR2(200);
    V_CFIDPLACE VARCHAR2(200);
    V_CFIDINFO VARCHAR2(200);
    V_CFBANKATADDRESS VARCHAR2(200);
    V_CFMOBILE VARCHAR2(200);
    V_CFFAX VARCHAR2(200);
    V_CFEMAIL VARCHAR2(200);
    V_SYMBOLL VARCHAR2(200);
BEGIN
     V_STROPTION := OPT;
     V_CURRDATE   := GETCURRDATE;
     IF V_STROPTION = 'A' THEN
        V_STRBRID := '%';
     ELSIF V_STROPTION = 'B' THEN
        V_STRBRID := SUBSTR(BRID,1,2) || '__' ;
     ELSE
        V_STRBRID:=BRID;
     END IF;
     --P_SYMBOL
     V_SYMBOL:= P_SYMBOL;
     IF (P_SYMBOL = 'ALL') THEN
        V_SYMBOL := '%%';
     ELSE
       -- V_SYMBOL := '%' || P_SYMBOL || '%';
        V_SYMBOL :=  P_SYMBOL ;
     END IF;

    V_CUSTODYCD := REPLACE(P_CUSTODYCD,'.','');
    V_FROMDATE  := TO_DATE(F_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    V_TODATE    := TO_DATE(T_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    V_PREVDATE  := FN_GET_PREVDATE(V_FROMDATE,1);
    V_NEXTDATE  := GETPDATE_NEXT(V_FROMDATE,2);


-------------------------LAY THONG TIN AMC--------------------------------
BEGIN
    SELECT CF.AMCID, FA.FULLNAME
    INTO V_AMCID, V_AMCFULNAME
    FROM CFMAST CF
    LEFT JOIN FAMEMBERS FA ON CF.AMCID = FA.AUTOID
    WHERE CF.CUSTODYCD=V_CUSTODYCD
    AND CF.STATUS NOT IN ('C');
EXCEPTION
          WHEN NO_DATA_FOUND THEN
            V_AMCID:= NULL;
            V_AMCFULNAME:= NULL;

END;
---------------------------------------------------------------------------
    SELECT MAX(CASE WHEN  VARNAME='BRADDRESS' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='BRADDRESS_EN' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='HEADOFFICE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='HEADOFFICE_EN' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='EMAIL' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='PHONE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='FAX' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='MAJORSHAREHOLDER' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='CLEARDAY' THEN VARVALUE ELSE '' END)
       INTO V_BRADDRESS,V_BRADDRESS_EN,V_HEADOFFICE,V_HEADOFFICE_EN,V_EMAIL,V_PHONE,V_FAX, V_MAJORSHAREHOLDER, V_CLEARDAY
    FROM SYSVAR WHERE VARNAME IN ('BRADDRESS','BRADDRESS_EN','HEADOFFICE','HEADOFFICE_EN','EMAIL','PHONE','FAX', 'MAJORSHAREHOLDER', 'CLEARDAY');
----------------------------------------------------------------------------
    SELECT MAX(CASE WHEN  VARNAME='1IDCODE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='1OFFICE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='1REFNAME' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='2IDCODE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='2OFFICE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='2REFNAME' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='BUSSINESSID' THEN VARVALUE ELSE '' END)
        INTO V_1IDCODE, V_1OFFICE, V_1REFNAME, V_2IDCODE, V_2OFFICE, V_2REFNAME, V_BUSSINESSID
    FROM SYSVAR WHERE VARNAME IN ('1IDCODE','1OFFICE','1REFNAME','2IDCODE','2OFFICE','2REFNAME','BUSSINESSID');
---------------------- DANH SACH CAC FUND CUA AMC--------------------------
BEGIN
    SELECT LISTAGG(FULLNAME,CHR(10)) WITHIN GROUP(ORDER BY AMCID) INTO V_LISTFUND
    FROM (
        SELECT CF.FULLNAME, CF.AMCID FROM CFMAST CF WHERE CF.STATUS NOT IN ('C') AND CF.CUSTODYCD <> V_CUSTODYCD AND CF.AMCID = V_AMCID GROUP BY CF.FULLNAME, CF.AMCID
    );
EXCEPTION
          WHEN NO_DATA_FOUND THEN
            V_LISTFUND:= NULL;

END;
------------------------QUOC TICH CUA AM-----------------------
BEGIN
            WITH  TMPCOUNTRY AS (
                    SELECT CDVAL COUNTRYID,CDCONTENT AS COUNTRY,EN_CDCONTENT  EN_COUNTRY
                    FROM ALLCODE
                    WHERE CDNAME='COUNTRY'
                )
            SELECT C.COUNTRY,C.EN_COUNTRY
            INTO V_COUNTRYAMC,V_COUNTRYAMC_EN
            FROM FAMEMBERS FA
            LEFT JOIN TMPCOUNTRY C ON FA.NATIONALITY=C.COUNTRYID
            WHERE  FA.AUTOID=V_AMCID;
 EXCEPTION
              WHEN NO_DATA_FOUND THEN
                V_COUNTRYAMC:= NULL;
                V_COUNTRYAMC_EN:= NULL;

 END;
--------------- TINH KHOI LUONG CO PHIEU CUA NHUNG NGUOI CO LIEN QUAN--------------
BEGIN
  SELECT
       -- NVL(ROUND(100*(SUM(SE.ENDQTTY))/(SUM(SI.LISTINGQTTY)),2),0),
        CASE WHEN SUM(NVL(SI.LISTINGQTTY,0)) > 0 THEN  ROUND(100*SUM(NVL(SE.ENDQTTY,0))/ SUM(NVL(SI.LISTINGQTTY,0)),2) ELSE 0 END,
        NVL(SUM(SE.ENDQTTY),0) ENDQTTY
        INTO V_PERCENT_RELATED,V_QTTY_RELATED
        FROM (
            SELECT * FROM CFMAST WHERE STATUS NOT IN ('C')
        ) CF,
        (
            SELECT SE.CUSTID, SE.AFACCTNO,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) SYMBOL,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END) CODEID,
                   SUM(SE.TRADE + (CASE WHEN SB.SYMBOL LIKE '%_WFT' THEN 0 ELSE SE.RECEIVING END) + SE.MORTAGE + SE.BLOCKED + SE.EMKQTTY - NVL(INDAY.NAMT,0) - NVL(TR.NAMT,0)) BEGINQTTY,
                   SUM(SE.TRADE + (CASE WHEN SB.SYMBOL LIKE '%_WFT' THEN 0 ELSE SE.RECEIVING END) + SE.MORTAGE + SE.BLOCKED + SE.EMKQTTY - NVL(TR.NAMT,0)) ENDQTTY

            FROM (
                SELECT SE.ACCTNO, SE.AFACCTNO, SE.CODEID, SE.CUSTID, SE.TRADE, SE.RECEIVING, SE.MORTAGE, SE.BLOCKED, SE.EMKQTTY, CF.CUSTATCOM
                FROM SEMAST SE, CFMAST CF
                WHERE SE.CUSTID = CF.CUSTID
                AND CF.CUSTATCOM = 'Y'
            ) SE,
                (
                    SELECT SB.CODEID, SB.SYMBOL,
                     (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE,
                     SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                    FROM SBSECURITIES SB, SBSECURITIES SB1
                    WHERE SB.REFCODEID = SB1.CODEID(+)
                     AND SB.SECTYPE <> '004'
                )SB,
                -- PHAT SINH TU FROM DATE
                (
                    SELECT CUSTODYCD, ACCTNO, SYMBOL,
                           SUM(CASE WHEN TXTYPE='C' THEN NAMT ELSE -NAMT END) NAMT
                    FROM VW_SETRAN_GEN
                     WHERE BUSDATE > V_FROMDATE AND FIELD IN ('TRADE','RECEIVING','MORTAGE', 'BLOCKED', 'EMKQTTY')
                        AND SYMBOL LIKE P_SYMBOL||'%'
                     GROUP BY CUSTODYCD, ACCTNO, SYMBOL
                )TR,
                -- PHAT SINH TAI NGAY V_FROMDATE
                (
                    SELECT CUSTODYCD, ACCTNO, SYMBOL,
                           SUM(CASE WHEN TXTYPE='C' THEN NAMT ELSE -NAMT END) NAMT
                    FROM VW_SETRAN_GEN
                    WHERE BUSDATE = V_FROMDATE AND FIELD IN ('TRADE','RECEIVING','MORTAGE', 'BLOCKED', 'EMKQTTY')
                        AND SYMBOL LIKE P_SYMBOL||'%'
                    GROUP BY CUSTODYCD, ACCTNO, SYMBOL
                )INDAY
            WHERE SE.CODEID = SB.CODEID
                  AND (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) LIKE P_SYMBOL||'%'
                  AND SE.ACCTNO = TR.ACCTNO (+)
                  AND SE.ACCTNO = INDAY.ACCTNO (+)
            GROUP BY   SE.CUSTID, SE.AFACCTNO,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END),
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END)

            UNION ALL

            SELECT SE.CUSTID, SE.AFACCTNO,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) SYMBOL,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END) CODEID,
                   SUM(CASE WHEN SE.TXDATE = V_PREVDATE THEN SE.TRADE ELSE 0 END) BEGINQTTY,
                   SUM(CASE WHEN SE.TXDATE = V_NEXTDATE THEN SE.TRADE ELSE 0 END) ENDQTTY
            FROM SENOCUSTATCOM SE, CFMAST CF,
            (
                SELECT SB.CODEID, SB.SYMBOL, (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE, SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                FROM SBSECURITIES SB, SBSECURITIES SB1
                WHERE SB.REFCODEID = SB1.CODEID(+)
                AND SB.SECTYPE <> '004'
            )SB
            WHERE SE.CUSTID = CF.CUSTID
            AND CF.CUSTATCOM = 'N'
            AND SE.TXDATE BETWEEN V_PREVDATE AND V_NEXTDATE
            AND SE.CODEID = SB.CODEID
            AND (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) LIKE P_SYMBOL||'%'
            GROUP BY SE.CUSTID, SE.AFACCTNO,(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END),(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END)


        ) SE,
        (
                SELECT
                       SB.SYMBOL,
                       ISS.FULLNAME ISSFULLNAME, -- TEN TCPH
                       ISS.EN_FULLNAME EN_ISSFULLNAME, -- TEN TA TCPH
                       A1.CDCONTENT EXCHANGES,          -- TEN SO GDCK
                       A1.EN_CDCONTENT  EN_EXCHANGES,   -- TEN TA SO GDCK
                       SI1.LISTINGQTTY,                   -- KL NIEM YET
                       SI1.PREV_LISTINGQTTY,
                       SI1.CODEID
                FROM ISSUERS ISS, SBSECURITIES SB, ALLCODE A1,
                    (
                        SELECT CODEID,
                        NVL(SUM(CASE
                                WHEN P_SHARESOUTTYP='O' AND HISTDATE=V_FROMDATE THEN OLDCIRCULATINGQTTY
                                WHEN P_SHARESOUTTYP <>'O' AND HISTDATE=V_FROMDATE THEN NEWCIRCULATINGQTTY ELSE 0 END),0) LISTINGQTTY,
                        NVL(SUM(CASE
                                WHEN P_SHARESOUTTYP='O' AND HISTDATE=V_PREVDATE THEN OLDCIRCULATINGQTTY
                                WHEN P_SHARESOUTTYP <>'O' AND HISTDATE=V_PREVDATE THEN NEWCIRCULATINGQTTY ELSE 0 END),0) PREV_LISTINGQTTY
                        FROM VW_SECURITIES_INFO_HIST
                        WHERE SYMBOL LIKE P_SYMBOL
                            AND HISTDATE BETWEEN V_PREVDATE AND V_FROMDATE
                        GROUP BY CODEID
                    ) SI1
                WHERE ISS.ISSUERID = SB.ISSUERID
                    AND SB.TRADEPLACE = A1.CDVAL AND A1.CDNAME='EXCHANGES'
                    AND SB.CODEID = SI1.CODEID (+)
                    AND SB.SYMBOL = P_SYMBOL
        ) SI
        WHERE CF.CUSTID = SE.CUSTID (+)
              AND SE.CODEID = SI.CODEID(+)
              AND (CF.CUSTODYCD =V_CUSTODYCD OR CF.AMCID = V_AMCID);
 EXCEPTION
              WHEN NO_DATA_FOUND THEN
                V_PERCENT_RELATED:= 0;
                V_QTTY_RELATED:= 0;

 END;
-----------------------------TINH SO LUONG VA TI LE TRUOC VA SAU GIAO DICH TK INPUT------------------------------------------------
BEGIN
            SELECT RIT.BEGINQTTY -- SO LUONG TRUOC GD
            --,NVL(ROUND(100*RIT.BEGINQTTY/SI.PREV_LISTINGQTTY,2),0) --TI LE TRUOC GIAO DICH
            ,CASE WHEN SI.PREV_LISTINGQTTY > 0 THEN  ROUND(100*RIT.BEGINQTTY/SI.PREV_LISTINGQTTY,2) ELSE 0 END
           -- ,RIT.INDAYQTTY -- SL MUA BAN TRONG NGAY
            ,RIT.ENDQTTY - RIT.BEGINQTTY
            ,'mua/bán'
            ,'purchase/sell'
            ,RIT.ENDQTTY --SL SAU GD
           -- ,ROUND(100*RIT.ENDQTTY/SI.LISTINGQTTY,2) --TI LE SAU GIAO DICH
            ,CASE WHEN SI.LISTINGQTTY > 0 THEN  ROUND(100*RIT.ENDQTTY/SI.LISTINGQTTY,2) ELSE 0 END

               ,NVL(SI.ISSFULLNAME,'') ISSFULLNAME
               ,NVL(SI.EN_ISSFULLNAME,'') EN_ISSFULLNAME
               ,NVL(SI.EXCHANGES,'') EXCHANGES
               ,NVL(SI.EN_EXCHANGES,'') EN_EXCHANGES
               ,CO.COUNTRY CFCOUNTRY
               ,CO.EN_COUNTRY CFCOUNTRY_EN
               ,CF.FULLNAME  CFFULLNAME
               ,CF.IDPLACE CFIDPLACE
               ,CASE WHEN CF.IDTYPE='009' THEN CF.TRADINGCODE
                    ELSE CF.IDCODE
               END ||', '||
               CASE WHEN CF.IDTYPE='009' THEN CF.TRADINGCODEDT
                    ELSE CF.IDDATE
               END ||', '||
               CF.IDPLACE CFIDINFO
               ,CF.BANKATADDRESS CFBANKATADDRESS
               ,CF.MOBILESMS CFMOBILE
               ,CF.FAX CFFAX
               ,CF.EMAIL CFEMAIL
               ,SI.SYMBOL

    INTO V_PREVQTTY_IN,V_PREVPERCENT_IN,V_INDAYQTTY_IN,V_INDAY_TEXT_IN,V_INDAY_TEXT_IN_EN,V_ENDQTTY_IN,V_ENDPERCENT_IN,
        V_ISSFULLNAME,V_EN_ISSFULLNAME,V_EXCHANGES,V_EN_EXCHANGES,V_CFCOUNTRY,V_CFCOUNTRY_EN,V_CFFULLNAME,V_CFIDPLACE,V_CFIDINFO,V_CFBANKATADDRESS,V_CFMOBILE,V_CFFAX,V_CFEMAIL,V_SYMBOLL

    FROM (
        SELECT * FROM CFMAST WHERE STATUS NOT IN ('C')
    ) CF,
    (
            SELECT SE.CUSTID, SE.AFACCTNO,
                  (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) SYMBOL,
                  (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END) CODEID,
                  SUM(SE.TRADE + (CASE WHEN SB.SYMBOL LIKE '%_WFT' THEN 0 ELSE SE.RECEIVING END) + SE.MORTAGE + SE.BLOCKED + SE.EMKQTTY - NVL(INDAY.NAMT,0) - NVL(TR.NAMT,0)) BEGINQTTY,
                  SUM(SE.TRADE + (CASE WHEN SB.SYMBOL LIKE '%_WFT' THEN 0 ELSE SE.RECEIVING END) + SE.MORTAGE + SE.BLOCKED + SE.EMKQTTY - NVL(TR.NAMT,0)) ENDQTTY,
                  MAX(BS.BUY_QTTY) BUY_QTTY,
                  MAX(BS.SELL_QTTY) SELL_QTTY
            FROM (
                SELECT SE.ACCTNO, SE.AFACCTNO, SE.CODEID, SE.CUSTID, SE.TRADE, SE.RECEIVING, SE.MORTAGE, SE.BLOCKED, SE.EMKQTTY, CF.CUSTATCOM
                FROM SEMAST SE, CFMAST CF
                WHERE SE.CUSTID = CF.CUSTID
                AND CF.CUSTATCOM = 'Y'
            ) SE,
               (
                   SELECT SB.CODEID, SB.SYMBOL,
                    (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE,
                    SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                   FROM SBSECURITIES SB, SBSECURITIES SB1
                   WHERE SB.REFCODEID = SB1.CODEID(+)
                    AND SB.SECTYPE <> '004'
               )SB,
           -- PHAT SINH TU FROM DATE
           (
               SELECT CUSTODYCD, ACCTNO, SYMBOL,
                      SUM(CASE WHEN TXTYPE='C' THEN NAMT ELSE -NAMT END) NAMT
               FROM VW_SETRAN_GEN
                WHERE BUSDATE > V_FROMDATE AND FIELD IN ('TRADE','RECEIVING','MORTAGE', 'BLOCKED', 'EMKQTTY')
                   AND SYMBOL LIKE P_SYMBOL||'%'
                GROUP BY CUSTODYCD, ACCTNO, SYMBOL
           )TR,
           -- PHAT SINH TAI NGAY V_FROMDATE
           (
               SELECT CUSTODYCD, ACCTNO, SYMBOL,
                      SUM(CASE WHEN TXTYPE='C' THEN NAMT ELSE -NAMT END) NAMT
               FROM VW_SETRAN_GEN
               WHERE BUSDATE = V_FROMDATE AND FIELD IN ('TRADE','RECEIVING','MORTAGE', 'BLOCKED', 'EMKQTTY')
                   AND SYMBOL LIKE P_SYMBOL||'%'
               GROUP BY CUSTODYCD, ACCTNO, SYMBOL
           )INDAY,
           -- KL MUA/BAN TAI NGAY FROMDATE
           (
               SELECT CUSTODYCD, AFACCTNO, SYMBOL, CODEID, TXDATE, SEACCTNO,
                      SUM(CASE WHEN EXECTYPE='NB' THEN EXECQTTY ELSE 0 END) BUY_QTTY,
                      SUM(CASE WHEN EXECTYPE='NS' THEN EXECQTTY ELSE 0 END) SELL_QTTY
               FROM VW_ODMAST_ALL
               WHERE TXDATE = V_FROMDATE
               GROUP BY CUSTODYCD, AFACCTNO, SYMBOL, CODEID, TXDATE, SEACCTNO
               HAVING SUM(CASE WHEN EXECTYPE='NB' THEN EXECQTTY ELSE 0 END)  + SUM(CASE WHEN EXECTYPE='NS' THEN EXECQTTY ELSE 0 END) <> 0
           )BS
          WHERE SE.CODEID = SB.CODEID
             AND (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) LIKE P_SYMBOL||'%'
             AND SE.ACCTNO = TR.ACCTNO (+)
             AND SE.ACCTNO = INDAY.ACCTNO (+)
             AND SE.ACCTNO = BS.SEACCTNO (+)
          GROUP BY SE.CUSTID, SE.AFACCTNO,(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END),(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END)

          UNION ALL

          SELECT SE.CUSTID, SE.AFACCTNO,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) SYMBOL,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END) CODEID,
                   SUM(CASE WHEN SE.TXDATE = V_PREVDATE THEN SE.TRADE ELSE 0 END) BEGINQTTY,
                   SUM(CASE WHEN SE.TXDATE = V_NEXTDATE THEN SE.TRADE ELSE 0 END) ENDQTTY,
                   SUM(CASE WHEN SE.TXDATE = V_PREVDATE THEN SE.TRADE ELSE 0 END) BUY_QTTY,
                   SUM(CASE WHEN SE.TXDATE = V_NEXTDATE THEN SE.TRADE ELSE 0 END) SELL_QTTY
            FROM SENOCUSTATCOM SE, CFMAST CF,
            (
                SELECT SB.CODEID, SB.SYMBOL, (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE, SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                FROM SBSECURITIES SB, SBSECURITIES SB1
                WHERE SB.REFCODEID = SB1.CODEID(+)
                AND SB.SECTYPE <> '004'
            )SB
            WHERE SE.CUSTID = CF.CUSTID
            AND CF.CUSTATCOM = 'N'
            AND SE.TXDATE BETWEEN V_PREVDATE AND V_NEXTDATE
            AND SE.CODEID = SB.CODEID
            AND (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) LIKE P_SYMBOL||'%'
            GROUP BY SE.CUSTID, SE.AFACCTNO,(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END),(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END)
    )RIT,
   (
                    SELECT
                           SB.SYMBOL,
                           ISS.FULLNAME ISSFULLNAME, -- TEN TCPH
                           ISS.EN_FULLNAME EN_ISSFULLNAME, -- TEN TA TCPH
                           A1.CDCONTENT EXCHANGES,          -- TEN SO GDCK
                           A1.EN_CDCONTENT  EN_EXCHANGES,   -- TEN TA SO GDCK
                           SI1.LISTINGQTTY,                   -- KL NIEM YET
                           SI1.PREV_LISTINGQTTY,
                           SI1.CODEID
                    FROM ISSUERS ISS, SBSECURITIES SB, ALLCODE A1,
                        (
                            SELECT CODEID,
                            NVL(SUM(CASE
                                    WHEN P_SHARESOUTTYP='O' AND HISTDATE=V_FROMDATE THEN OLDCIRCULATINGQTTY
                                    WHEN P_SHARESOUTTYP <>'O' AND HISTDATE=V_FROMDATE THEN NEWCIRCULATINGQTTY ELSE 0 END),0) LISTINGQTTY,
                            NVL(SUM(CASE
                                    WHEN P_SHARESOUTTYP='O' AND HISTDATE=V_PREVDATE THEN OLDCIRCULATINGQTTY
                                    WHEN P_SHARESOUTTYP <>'O' AND HISTDATE=V_PREVDATE THEN NEWCIRCULATINGQTTY ELSE 0 END),0) PREV_LISTINGQTTY
                            FROM VW_SECURITIES_INFO_HIST
                            WHERE SYMBOL LIKE P_SYMBOL
                                AND HISTDATE BETWEEN V_PREVDATE AND V_FROMDATE
                            GROUP BY CODEID
                        ) SI1
                    WHERE ISS.ISSUERID = SB.ISSUERID
                        AND SB.TRADEPLACE = A1.CDVAL AND A1.CDNAME='EXCHANGES'
                        AND SB.CODEID = SI1.CODEID (+)
                        AND SB.SYMBOL = P_SYMBOL
            ) SI,
            (
             SELECT CDVAL COUNTRYID,CDCONTENT AS COUNTRY,EN_CDCONTENT  EN_COUNTRY
             FROM ALLCODE
             WHERE CDNAME='COUNTRY'
            )CO
    WHERE CF.CUSTID = RIT.CUSTID
    AND RIT.CODEID = SI.CODEID (+)
    AND CF.CUSTODYCD =V_CUSTODYCD
    AND CF.COUNTRY = CO.COUNTRYID (+);
 EXCEPTION
              WHEN NO_DATA_FOUND THEN
                V_PREVQTTY_IN:= 0;
                V_PREVPERCENT_IN:= 0;
                V_INDAYQTTY_IN :=0;
                V_ENDQTTY_IN:=0;
                V_ENDPERCENT_IN:= 0;
                PLOG.ERROR ('CF6011: LOI' || SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);

 END;

------------------------------------ TINH KHOI LUONG CO PHIEU CUA NHUNG NGUOI CO LIEN QUAN-------------------------------------------------------

OPEN PV_REFCURSOR FOR
    SELECT
           'CF6011' MASTERID,
           P_REPORTNO REPORTNO,
           TO_CHAR(V_FROMDATE,'DD') DAYSTR,
           TO_CHAR(V_FROMDATE,'MM') MONTHSTR,
           TO_CHAR(V_FROMDATE,'MON') MONTHSTR_EN,
           TO_CHAR(V_FROMDATE,'YYYY') YEARSTR,
           -- THONG TIN HSV
           V_HEADOFFICE HEADOFFICE,
           V_HEADOFFICE_EN HEADOFFICE_EN,
           V_BRADDRESS BRADDRESS,
           V_BRADDRESS_EN BRADDRESS_EN,
           V_EMAIL EMAIL,
           V_PHONE PHONE,
           V_FAX FAX,
           V_BUSSINESSID BUSSINESSID,
           -- THONG TIN NGUOI DAI DIEN 1
           V_1REFNAME REFNAME1,
           V_1OFFICE OFFICE1,
           V_1IDCODE IDCODE1,
           -- THONG TIN NGUOI DAI DIEN 2
           V_2REFNAME REFNAME2,
           V_2OFFICE OFFICE2,
           V_2IDCODE IDCODE2,
           -- THONG TIN NGUOI DAI DIEN
           CASE WHEN P_SIGNTYPE='002' THEN V_1REFNAME ELSE V_2REFNAME END REFNAME,
           CASE WHEN P_SIGNTYPE='002' THEN V_1OFFICE ELSE V_2OFFICE END OFFICE,
           V_FROMDATE REPORTDATE,
           TO_CHAR(V_FROMDATE,SYSTEMNUMS.C_DATE_FORMAT) CURRDATE,

           V_ISSFULLNAME ISSFULLNAME,
           V_EN_ISSFULLNAME EN_ISSFULLNAME,
           V_EXCHANGES EXCHANGES,
           V_EN_EXCHANGES EN_EXCHANGES,
           V_CFCOUNTRY CFCOUNTRY,
           V_CFCOUNTRY_EN CFCOUNTRY_EN,
           V_CFFULLNAME CFFULLNAME,
           V_CFIDPLACE CFIDPLACE,
           V_CFIDINFO CFIDINFO,
           V_CFBANKATADDRESS CFBANKATADDRESS,
           V_CFMOBILE CFMOBILE,
           V_CFFAX CFFAX,
           V_CFEMAIL CFEMAIL,
           V_SYMBOLL SYMBOL,

           MST.CFFULLNAME CFFULLNAME_OTHER,
           MST.CUSTODYCD CUSTODYCD_OTHER ,
           MST.CIFID CIFID_OTHER,

           V_LISTFUND LISTFUNDOFAMC,
           V_COUNTRYAMC NATIONALITYAMC,
           V_COUNTRYAMC_EN NATIONALITYAMC_EN,
           V_AMCFULNAME AMCFULLNAME,
           V_PREVQTTY_IN PREVQTTY_IN,
           V_PREVPERCENT_IN  PREVPERCENT_IN,
           V_INDAYQTTY_IN INDAYQTTY_IN,
           V_INDAY_TEXT_IN INDAY_TEXT_IN,
           V_INDAY_TEXT_IN_EN INDAY_TEXT_IN_EN,
           V_ENDQTTY_IN ENDQTTY_IN,
           V_ENDPERCENT_IN ENDPERCENT_IN,

           NVL(MST.LISTINGQTTY,0) LISTINGQTTY,
           NVL(MST.PREV_LISTINGQTTY,0) PREV_LISTINGQTTY,
           TRIM(TO_CHAR(MST.BEGINQTTY,'9,999,999,999,999')) PREVQTTY,
           TRIM(TO_CHAR(MST.ENDQTTY,'9,999,999,999,999')) ENDQTTY,
           TRIM(TO_CHAR(ABS(MST.ENDQTTY-MST.BEGINQTTY),'9,999,999,999,999')) QTTYCHANGE,
           --NVL(ROUND(100*MST.BEGINQTTY/NULLIF(MST.PREV_LISTINGQTTY,0),2),0) PREPERCENT,
           CASE WHEN MST.LISTINGQTTY > 0 THEN ROUND(100*MST.ENDQTTY/MST.LISTINGQTTY,2) ELSE 0 END PERCENT,
           --NVL(ROUND(100*MST.ENDQTTY/MST.LISTINGQTTY,2),0) PERCENT,
           TRIM(TO_CHAR(V_QTTY_RELATED,'9,999,999,999,999')) AMCQTTY,
           V_PERCENT_RELATED AMCPERCENT,
           BUY_QTTY,
           SELL_QTTY,
           -- KL MUA/BAN TRONG NGAY.
           MST.INDAYQTTY
    FROM
    (
        SELECT CF.CUSTODYCD, CF.FULLNAME, CF.CIFID,CF.TRADINGCODE,
               NVL(SE.SYMBOL,'') SYMBOL,
               NVL(SI.ISSFULLNAME,'') ISSFULLNAME,
               NVL(SI.EN_ISSFULLNAME,'') EN_ISSFULLNAME,
               NVL(SI.EXCHANGES,'') EXCHANGES, NVL(SI.EN_EXCHANGES,'') EN_EXCHANGES,
               NVL(SI.LISTINGQTTY,0) LISTINGQTTY,
               NVL(SI.PREV_LISTINGQTTY,0) PREV_LISTINGQTTY,
               CF.FULLNAME  CFFULLNAME,
                /*CF.IDCODE*/
               CASE WHEN CF.IDTYPE='009' THEN CF.TRADINGCODE
                    ELSE CF.IDCODE
               END CFIDCODE,
               /* CF.IDDATE*/
               CASE WHEN CF.IDTYPE='009' THEN CF.TRADINGCODEDT
                    ELSE CF.IDDATE
               END CFIDDATE,
               CF.IDPLACE CFIDPLACE,
               CF.BANKATADDRESS CFBANKATADDRESS,
               CF.MOBILESMS CFMOBILE,
               CF.FAX CFFAX,
               CF.EMAIL CFEMAIL,

               NVL(SE.ENDQTTY - SE.BEGINQTTY, 0) INDAYQTTY,
               NVL(SE.BEGINQTTY,0) BEGINQTTY,
               NVL(SE.ENDQTTY,0) ENDQTTY,
               NVL(SE.BUY_QTTY,0) BUY_QTTY,
               NVL(SE.SELL_QTTY,0) SELL_QTTY
        FROM (
            SELECT * FROM CFMAST WHERE STATUS NOT IN ('C')
        ) CF,
        (
            SELECT SE.CUSTID, SE.AFACCTNO,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) SYMBOL,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END) CODEID,
                   SUM(SE.TRADE + (CASE WHEN SB.SYMBOL LIKE '%_WFT' THEN 0 ELSE SE.RECEIVING END) + SE.MORTAGE + SE.BLOCKED + SE.EMKQTTY - NVL(INDAY.NAMT,0) - NVL(TR.NAMT,0)) BEGINQTTY,
                   SUM(SE.TRADE + (CASE WHEN SB.SYMBOL LIKE '%_WFT' THEN 0 ELSE SE.RECEIVING END) + SE.MORTAGE + SE.BLOCKED + SE.EMKQTTY - NVL(TR.NAMT,0)) ENDQTTY,
                   MAX(BS.BUY_QTTY) BUY_QTTY,
                   MAX(BS.SELL_QTTY) SELL_QTTY
            FROM (
                SELECT SE.ACCTNO, SE.AFACCTNO, SE.CODEID, SE.CUSTID, SE.TRADE, SE.RECEIVING, SE.MORTAGE, SE.BLOCKED, SE.EMKQTTY, CF.CUSTATCOM
                FROM SEMAST SE, CFMAST CF
                WHERE SE.CUSTID = CF.CUSTID
                AND CF.CUSTATCOM = 'Y'
            ) SE,
                (
                    SELECT SB.CODEID, SB.SYMBOL,
                     (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE,
                     SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                    FROM SBSECURITIES SB, SBSECURITIES SB1
                    WHERE SB.REFCODEID = SB1.CODEID(+)
                     AND SB.SECTYPE <> '004'
                )SB,
                -- PHAT SINH TU FROM DATE
                (
                    SELECT CUSTODYCD, ACCTNO, SYMBOL,
                           SUM(CASE WHEN TXTYPE='C' THEN NAMT ELSE -NAMT END) NAMT
                    FROM VW_SETRAN_GEN
                     WHERE BUSDATE > V_FROMDATE AND FIELD IN ('TRADE','RECEIVING','MORTAGE', 'BLOCKED', 'EMKQTTY')
                        AND SYMBOL LIKE P_SYMBOL||'%'
                     GROUP BY CUSTODYCD, ACCTNO, SYMBOL
                )TR,
                -- PHAT SINH TAI NGAY V_FROMDATE
                (
                    SELECT CUSTODYCD, ACCTNO, SYMBOL,
                           SUM(CASE WHEN TXTYPE='C' THEN NAMT ELSE -NAMT END) NAMT
                    FROM VW_SETRAN_GEN
                    WHERE BUSDATE = V_FROMDATE AND FIELD IN ('TRADE','RECEIVING','MORTAGE', 'BLOCKED', 'EMKQTTY')
                        AND SYMBOL LIKE P_SYMBOL||'%'
                    GROUP BY CUSTODYCD, ACCTNO, SYMBOL
                )INDAY,
                -- KL MUA/BAN TAI NGAY FROMDATE
                (
                    SELECT CUSTODYCD, AFACCTNO, SYMBOL, CODEID, TXDATE, SEACCTNO,
                           SUM(CASE WHEN EXECTYPE='NB' THEN EXECQTTY ELSE 0 END) BUY_QTTY,
                           SUM(CASE WHEN EXECTYPE='NS' THEN EXECQTTY ELSE 0 END) SELL_QTTY
                    FROM VW_ODMAST_ALL
                    WHERE TXDATE = V_FROMDATE
                    GROUP BY CUSTODYCD, AFACCTNO, SYMBOL, CODEID, TXDATE, SEACCTNO
                    HAVING SUM(CASE WHEN EXECTYPE='NB' THEN EXECQTTY ELSE 0 END)  + SUM(CASE WHEN EXECTYPE='NS' THEN EXECQTTY ELSE 0 END) <> 0
                )BS
            WHERE SE.CODEID = SB.CODEID
                  AND (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) LIKE P_SYMBOL||'%'
                  AND SE.ACCTNO = TR.ACCTNO (+)
                  AND SE.ACCTNO = INDAY.ACCTNO (+)
                  AND SE.ACCTNO = BS.SEACCTNO (+)
            GROUP BY   SE.CUSTID, SE.AFACCTNO,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END),
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END)

           UNION ALL

           SELECT SE.CUSTID, SE.AFACCTNO,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) SYMBOL,
                   (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END) CODEID,
                   SUM(CASE WHEN SE.TXDATE = V_PREVDATE THEN SE.TRADE ELSE 0 END) BEGINQTTY,
                   SUM(CASE WHEN SE.TXDATE = V_NEXTDATE THEN SE.TRADE ELSE 0 END) ENDQTTY,
                   0 BUY_QTTY,
                   0 SELL_QTTY
            FROM SENOCUSTATCOM SE, CFMAST CF,
            (
                SELECT SB.CODEID, SB.SYMBOL, (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE, SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                FROM SBSECURITIES SB, SBSECURITIES SB1
                WHERE SB.REFCODEID = SB1.CODEID(+)
                AND SB.SECTYPE <> '004'
            )SB
            WHERE SE.CUSTID = CF.CUSTID
            AND CF.CUSTATCOM = 'N'
            AND SE.TXDATE BETWEEN V_PREVDATE AND V_NEXTDATE
            AND SE.CODEID = SB.CODEID
            AND (CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END) LIKE P_SYMBOL||'%'
            GROUP BY SE.CUSTID, SE.AFACCTNO,(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.SYMBOL ELSE SB.REFSYMBOL END),(CASE WHEN SB.REFSYMBOL IS NULL THEN SB.CODEID ELSE SB.REFCODEID END)

        ) SE,
        (
                    SELECT
                           SB.SYMBOL,
                           ISS.FULLNAME ISSFULLNAME, -- TEN TCPH
                           ISS.EN_FULLNAME EN_ISSFULLNAME, -- TEN TA TCPH
                           A1.CDCONTENT EXCHANGES,          -- TEN SO GDCK
                           A1.EN_CDCONTENT  EN_EXCHANGES,   -- TEN TA SO GDCK
                           SI1.LISTINGQTTY,                   -- KL NIEM YET
                           SI1.PREV_LISTINGQTTY,
                           SI1.CODEID
                    FROM ISSUERS ISS, SBSECURITIES SB, ALLCODE A1,
                        (
                            SELECT CODEID,
                            NVL(SUM(CASE
                                    WHEN P_SHARESOUTTYP='O' AND HISTDATE=V_FROMDATE THEN OLDCIRCULATINGQTTY
                                    WHEN P_SHARESOUTTYP <>'O' AND HISTDATE=V_FROMDATE THEN NEWCIRCULATINGQTTY ELSE 0 END),0) LISTINGQTTY,
                            NVL(SUM(CASE
                                    WHEN P_SHARESOUTTYP='O' AND HISTDATE=V_PREVDATE THEN OLDCIRCULATINGQTTY
                                    WHEN P_SHARESOUTTYP <>'O' AND HISTDATE=V_PREVDATE THEN NEWCIRCULATINGQTTY ELSE 0 END),0) PREV_LISTINGQTTY
                            FROM VW_SECURITIES_INFO_HIST
                            WHERE SYMBOL LIKE P_SYMBOL
                                AND HISTDATE BETWEEN V_PREVDATE AND V_FROMDATE
                            GROUP BY CODEID
                        ) SI1
                    WHERE ISS.ISSUERID = SB.ISSUERID
                        AND SB.TRADEPLACE = A1.CDVAL AND A1.CDNAME='EXCHANGES'
                        AND SB.CODEID = SI1.CODEID(+)
                        AND SB.SYMBOL = P_SYMBOL
            ) SI
        WHERE CF.CUSTID = SE.CUSTID(+)
             -- AND CF.CUSTID = RIT1.CUSTID (+)
              AND SE.CODEID = SI.CODEID(+)-- AND SI.CODEID = NVL(SE.CODEID, '')
              AND CF.CUSTODYCD!=V_CUSTODYCD AND CF.AMCID = V_AMCID
              AND (NVL(SE.BEGINQTTY,0) +  NVL(SE.ENDQTTY,0)) <> 0
    )MST-- ORDER BY MST.CUSTODYCD;
UNION ALL
SELECT
            'CF6011' MASTERID,
           P_REPORTNO REPORTNO,
           TO_CHAR(V_FROMDATE,'DD') DAYSTR,
           TO_CHAR(V_FROMDATE,'MM') MONTHSTR,
           TO_CHAR(V_FROMDATE,'MON') MONTHSTR_EN,
           TO_CHAR(V_FROMDATE,'YYYY') YEARSTR,
           -- THONG TIN HSV
           V_HEADOFFICE HEADOFFICE,
           V_HEADOFFICE_EN HEADOFFICE_EN,
           V_BRADDRESS BRADDRESS,
           V_BRADDRESS_EN BRADDRESS_EN,
           V_EMAIL EMAIL,
           V_PHONE PHONE,
           V_FAX FAX,
           V_BUSSINESSID BUSSINESSID,
           -- THONG TIN NGUOI DAI DIEN 1
           V_1REFNAME REFNAME1,
           V_1OFFICE OFFICE1,
           V_1IDCODE IDCODE1,
           -- THONG TIN NGUOI DAI DIEN 2
           V_2REFNAME REFNAME2,
           V_2OFFICE OFFICE2,
           V_2IDCODE IDCODE2,
           -- THONG TIN NGUOI DAI DIEN
           CASE WHEN P_SIGNTYPE='002' THEN V_1REFNAME ELSE V_2REFNAME END REFNAME,
           CASE WHEN P_SIGNTYPE='002' THEN V_1OFFICE ELSE V_2OFFICE END OFFICE,
           V_FROMDATE REPORTDATE,
           TO_CHAR(V_FROMDATE,SYSTEMNUMS.C_DATE_FORMAT) CURRDATE,

           V_ISSFULLNAME ISSFULLNAME,
           V_EN_ISSFULLNAME EN_ISSFULLNAME,
           V_EXCHANGES EXCHANGES,
           V_EN_EXCHANGES EN_EXCHANGES,
           V_CFCOUNTRY CFCOUNTRY,
           V_CFCOUNTRY_EN CFCOUNTRY_EN,
           V_CFFULLNAME CFFULLNAME,
           V_CFIDPLACE CFIDPLACE,
           V_CFIDINFO CFIDINFO,
           V_CFBANKATADDRESS CFBANKATADDRESS,
           V_CFMOBILE CFMOBILE,
           V_CFFAX V_CFFAX,
           V_CFEMAIL CFEMAIL,
           V_SYMBOLL SYMBOL,

           '' CFFULLNAME_OTHER,
           '' CUSTODYCD_OTHER ,
           '' CIFID_OTHER,

           V_LISTFUND LISTFUNDOFAMC,
           V_COUNTRYAMC NATIONALITYAMC,
           V_COUNTRYAMC_EN NATIONALITYAMC_EN,
           V_AMCFULNAME AMCFULLNAME,
           V_PREVQTTY_IN PREVQTTY_IN,
           V_PREVPERCENT_IN  PREVPERCENT_IN,
           V_INDAYQTTY_IN INDAYQTTY_IN,
           V_INDAY_TEXT_IN INDAY_TEXT_IN,
           V_INDAY_TEXT_IN_EN INDAY_TEXT_IN_EN,
           V_ENDQTTY_IN ENDQTTY_IN,
           V_ENDPERCENT_IN ENDPERCENT_IN,

          NVL(0,0) LISTINGQTTY,
           NVL(0,0) PREV_LISTINGQTTY,
           TRIM(TO_CHAR(0,'9,999,999,999,999')) PREVQTTY,
           TRIM(TO_CHAR(NULL,'9,999,999,999,999')) ENDQTTY,
           TRIM(TO_CHAR(0,'9,999,999,999,999')) QTTYCHANGE,
           --NVL(ROUND(100*MST.BEGINQTTY/NULLIF(MST.PREV_LISTINGQTTY,0),2),0) PREPERCENT,
           0 PERCENT,
           --NVL(ROUND(100*MST.ENDQTTY/MST.LISTINGQTTY,2),0) PERCENT,
           TRIM(TO_CHAR(V_QTTY_RELATED,'9,999,999,999,999')) AMCQTTY,
           V_PERCENT_RELATED AMCPERCENT,
           0 BUY_QTTY,
           0 SELL_QTTY,
           0 INDAYQTTY
FROM DUAL;

EXCEPTION
  WHEN OTHERS
   THEN
      PLOG.ERROR ('CF6011: ' || SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
      RETURN;
END;
/
