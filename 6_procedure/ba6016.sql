SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE BA6016 (
   PV_REFCURSOR           IN OUT   PKG_REPORT.REF_CURSOR,
   OPT                    IN       VARCHAR2,
   BRID                   IN       VARCHAR2,

   P_FDATE_PREVIOUS         IN       VARCHAR2,
   P_TDATE_PREVIOUS         IN       VARCHAR2,
   F_DATE                   IN       VARCHAR2,
   T_DATE                   IN       VARCHAR2,
   Report_No      IN       VARCHAR2 -- So chung tu
)
IS

  V_FDATE_PREVIOUS     DATE;
  V_TDATE_PREVIOUS       DATE;
  V_SLDNTR NUMBER(20,5);
  V_TONG_DU_KY_TRUOC NUMBER(20,5);
  V_TONG_GT_KY_TRUOC NUMBER(20,5);
  
  V_FROMDATE     DATE;
  V_TODATE       DATE;
  V_CURRDATE       DATE;
  V_SLDNKN NUMBER(20,5);
  V_TONG_DU_KY_SAU NUMBER(20,5);
  V_TONG_GT_KY_SAU NUMBER(20,5);

  V_STROPTION         VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
  V_STRBRID           VARCHAR2 (4);       -- USED WHEN V_NUMOPTION > 0

BEGIN

    V_STROPTION := OPT;
    IF V_STROPTION = 'A' THEN
        V_STRBRID := '%';
    ELSIF V_STROPTION = 'B' THEN
        V_STRBRID := SUBSTR(BRID,1,2) || '__' ;
    ELSE
        V_STRBRID:= BRID;
    END IF;

    V_FDATE_PREVIOUS := TO_DATE(P_FDATE_PREVIOUS, SYSTEMNUMS.C_DATE_FORMAT);
    V_TDATE_PREVIOUS := TO_DATE(P_TDATE_PREVIOUS, SYSTEMNUMS.C_DATE_FORMAT);
    V_FROMDATE := TO_DATE(F_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    V_TODATE := TO_DATE(T_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    SELECT GETCURRDATE INTO V_CURRDATE FROM DUAL;
    
------------------------------------KY TRUOC-------------------------------------------- 
 BEGIN   
 SELECT 
        COUNT(SLDNKT),
        SUM(TONG_DU_KY_TRUOC),
        SUM(TONG_GT_KY_TRUOC)
 INTO  V_SLDNTR,V_TONG_DU_KY_TRUOC,V_TONG_GT_KY_TRUOC      
 FROM (
        SELECT
                ------------------------------------------STATUS DANG KY AND LUU KY----------------------------------------------------------
                ISS.ISSUERID SLDNKT,
                CASE WHEN SUM(CASE WHEN  SB.REFSYMBOL IS  NULL THEN SE.TRADE-NVL(TR.TRADE_NAMT,0) ELSE 0 END) = 0 THEN NULL ELSE SUM(CASE WHEN  SB.REFSYMBOL IS NULL THEN SE.TRADE-NVL(TR.TRADE_NAMT,0) ELSE 0 END) END AS TONG_DU_KY_TRUOC,
                CASE WHEN SUM(CASE WHEN  SB.REFSYMBOL IS  NULL THEN SE.TRADE-NVL(TR.TRADE_NAMT,0) ELSE 0 END) = 0 THEN NULL ELSE SUM(CASE WHEN  SB.REFSYMBOL IS NULL THEN SE.TRADE-NVL(TR.TRADE_NAMT,0) ELSE 0 END)* SB.PARVALUE END AS TONG_GT_KY_TRUOC
        FROM
                (
                SELECT  SB.CODEID, SB.SYMBOL,SB.PARVALUE,SB.EXPDATE,SB.ISSUERID, SB.ROLEOFSHV,SB.SECTYPE,
                        (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE,
                        SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                FROM SBSECURITIES SB, SBSECURITIES SB1
                WHERE SB.REFCODEID = SB1.CODEID(+)
                ) SB, SEMAST SE, CFMAST CF,  BONDISSUE BO, ISSUES ISS,
                (-- KY TRUOC
                    SELECT ACCTNO,
                        SUM(CASE WHEN TXTYPE = 'D' THEN - NAMT ELSE NAMT END)  TRADE_NAMT
                    FROM VW_SETRAN_GEN
                    WHERE DELTD <> 'Y' AND FIELD IN ('TRADE') AND TXTYPE IN ('C','D') AND  BUSDATE > V_TDATE_PREVIOUS
                    GROUP BY ACCTNO
                    HAVING SUM(CASE WHEN FIELD = 'TRADE' THEN (CASE WHEN TXTYPE = 'D' THEN - NAMT ELSE NAMT END) ELSE 0 END) <> 0
                ) TR
        WHERE SB.SECTYPE IN ('003','006')
              AND SB.ROLEOFSHV IN ('002','003','004')
              AND SB.CODEID = SE.CODEID
              AND (SE.TRADE + SE.MARGIN + SE.MORTAGE + SE.BLOCKED + SE.SECURED + SE.REPO + SE.NETTING + SE.DTOCLOSE + SE.WITHDRAW + SE.EMKQTTY+ SE.BLOCKDTOCLOSE + SE.BLOCKWITHDRAW) > 0
              AND SE.CUSTID = CF.CUSTID
              AND SB.CODEID = BO.BONDCODE
              AND BO.ISSUESID = ISS.AUTOID
              AND SB.EXPDATE > V_TDATE_PREVIOUS 
              AND SE.ACCTNO = TR.ACCTNO (+)
        GROUP BY
                    SB.SYMBOL,      -- MA TP
                    SB.EXPDATE,     --NGAY DAO HAN TP
                    SB.PARVALUE,    --MENH GIA TP
                    ISS.ISSUERID
)A ;--GROUP BY REPORT_DATE,CT,CURRDATE;
EXCEPTION WHEN NO_DATA_FOUND THEN
V_SLDNTR:=NULL;V_TONG_DU_KY_TRUOC:=NULL;V_TONG_GT_KY_TRUOC :=NULL;
END;
------------------------------------KY NAY--------------------------------------------  
BEGIN  
 SELECT 
        COUNT(SLDNKN) SLDNKN,
        SUM(TONG_DU_KY_SAU)TONG_DU_KY_SAU,
        SUM(TONG_GT_KY_SAU)TONG_GT_KY_SAU
 INTO V_SLDNKN,V_TONG_DU_KY_SAU,V_TONG_GT_KY_SAU       
 FROM (
        SELECT
                ------------------------------------------STATUS DANG KY AND LUU KY----------------------------------------------------------
                ISS.ISSUERID SLDNKN,
                CASE WHEN SUM(CASE WHEN  SB.REFSYMBOL IS  NULL THEN SE.TRADE-NVL(TR1.TRADE_NAMT,0) ELSE 0 END)= 0 THEN NULL ELSE SUM(CASE WHEN  SB.REFSYMBOL IS NULL THEN SE.TRADE-NVL(TR1.TRADE_NAMT,0) ELSE 0 END)  END AS TONG_DU_KY_SAU,
                CASE WHEN SUM(CASE WHEN  SB.REFSYMBOL IS  NULL THEN SE.TRADE-NVL(TR1.TRADE_NAMT,0) ELSE 0 END)= 0 THEN NULL ELSE SUM(CASE WHEN  SB.REFSYMBOL IS NULL THEN SE.TRADE-NVL(TR1.TRADE_NAMT,0) ELSE 0 END)* SB.PARVALUE END AS TONG_GT_KY_SAU
        FROM
                (
                SELECT  SB.CODEID, SB.SYMBOL,SB.PARVALUE,SB.EXPDATE,SB.ISSUERID, SB.ROLEOFSHV,SB.SECTYPE,
                        (CASE WHEN SB.REFCODEID IS NULL THEN SB.TRADEPLACE ELSE SB1.TRADEPLACE END) TRADEPLACE,
                        SB1.CODEID REFCODEID, SB1.SYMBOL REFSYMBOL
                FROM SBSECURITIES SB, SBSECURITIES SB1
                WHERE SB.REFCODEID = SB1.CODEID(+)
                ) SB, SEMAST SE, CFMAST CF,  BONDISSUE BO, ISSUES ISS,
        ------------------------------------------------------------
                (-- KY NAY
                    SELECT ACCTNO,
                        SUM(CASE WHEN TXTYPE = 'D' THEN - NAMT ELSE NAMT END) TRADE_NAMT
                    FROM VW_SETRAN_GEN
                    WHERE DELTD <> 'Y' AND FIELD IN ('TRADE') AND TXTYPE IN ('C','D') AND BUSDATE > V_TODATE
                    GROUP BY ACCTNO
                    HAVING SUM(CASE WHEN FIELD = 'TRADE' THEN (CASE WHEN TXTYPE = 'D' THEN - NAMT ELSE NAMT END) ELSE 0 END) <> 0
                ) TR1
        ------------------------------------------------------------
        WHERE SB.SECTYPE IN ('003','006')
              AND SB.ROLEOFSHV IN ('002','003','004')
              AND SB.CODEID = SE.CODEID
              AND (SE.TRADE + SE.MARGIN + SE.MORTAGE + SE.BLOCKED + SE.SECURED + SE.REPO + SE.NETTING + SE.DTOCLOSE + SE.WITHDRAW + SE.EMKQTTY+ SE.BLOCKDTOCLOSE + SE.BLOCKWITHDRAW) > 0
              AND SE.CUSTID = CF.CUSTID
              AND SB.CODEID = BO.BONDCODE
              AND BO.ISSUESID = ISS.AUTOID
              AND SB.EXPDATE > v_ToDate --GETCURRDATE
              AND SE.ACCTNO = TR1.ACCTNO (+)

        GROUP BY
                    SB.SYMBOL,      -- MA TP
                    SB.EXPDATE,     --NGAY DAO HAN TP
                    SB.PARVALUE,    --MENH GIA TP
                    ISS.ISSUERID 
)A ;--GROUP BY REPORT_DATE,CT,CURRDATE;
EXCEPTION WHEN NO_DATA_FOUND THEN
V_SLDNKN:=NULL;V_TONG_DU_KY_SAU:=NULL;V_TONG_GT_KY_SAU:=NULL;  
END; 

     
 OPEN PV_REFCURSOR
 FOR   
        SELECT  V_TODATE AS REPORT_DATE,
                Report_No AS CT,
                GETCURRDATE AS CURRDATE,
                V_SLDNTR AS SLDNTR,
                V_TONG_DU_KY_TRUOC AS TONG_DU_KY_TRUOC,
                V_TONG_GT_KY_TRUOC AS TONG_GT_KY_TRUOC,
                V_SLDNKN AS SLDNKN,
                V_TONG_DU_KY_SAU AS TONG_DU_KY_SAU,
                V_TONG_GT_KY_SAU AS TONG_GT_KY_SAU
        FROM DUAL;  
EXCEPTION
  WHEN OTHERS
   THEN
   DBMS_OUTPUT.PUT_LINE('BA6016 ERROR');
   
      RETURN;
END;
/
