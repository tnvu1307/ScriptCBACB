SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE cf0097 (
   PV_REFCURSOR   IN OUT   PKG_REPORT.REF_CURSOR,
   OPT            IN       VARCHAR2,
   BRID           IN       VARCHAR2,
   F_DATE         IN       VARCHAR2,
   T_DATE         IN       VARCHAR2,
   CUSTODYCD      IN       VARCHAR2,
   CIACCTNO       IN       VARCHAR2,
   SYMBOL         IN       VARCHAR2
  )
IS
--
-- PURPOSE: BRIEFLY EXPLAIN THE FUNCTIONALITY OF THE PROCEDURE
-- DANH MUC DAU TU - CLOSE POSITION
-- MODIFICATION HISTORY
-- PERSON      DATE    COMMENTS
-- DUNGNH   18-AUG-10  CREATED
-- ---------   ------  -------------------------------------------

   CUR             PKG_REPORT.REF_CURSOR;
   V_STROPTION    VARCHAR2 (5);            -- A: ALL; B: BRANCH; S: SUB-BRANCH
   V_STRBRID      VARCHAR2 (4);                   -- USED WHEN V_NUMOPTION > 0

   V_STRSYMBOL          VARCHAR2 (20);
   V_STRCIACCTNO        VARCHAR2 (20);
   V_STRCUSTODYCD       VARCHAR2 (20);
   V_FROM_DATE          DATE;
   V_TO_DATE            DATE;


BEGIN
   V_STROPTION := OPT;

   IF V_STROPTION = 'A' THEN     -- TOAN HE THONG
      V_STRBRID := '%';
   ELSIF V_STROPTION = 'B' THEN
      V_STRBRID := SUBSTR(BRID,1,2) || '__' ;
   ELSE
      V_STRBRID := BRID;
   END IF;

    -- GET REPORT'S PARAMETERS
   --
   IF (SYMBOL = 'ALL' OR SYMBOL IS NULL)
   THEN
      V_STRSYMBOL := '%';
   ELSE
      V_STRSYMBOL := SYMBOL;
   END IF;
   --
   V_STRCUSTODYCD := CUSTODYCD;
   --
   IF (CIACCTNO <> 'ALL')
   THEN
      V_STRCIACCTNO := CIACCTNO;
   ELSE
      V_STRCIACCTNO := '%';
   END IF;
   --
   V_FROM_DATE  := TO_DATE(F_DATE,'DD/MM/YYYY');
   V_TO_DATE    := TO_DATE(T_DATE,'DD/MM/YYYY');


   -- END OF GETTING REPORT'S PARAMETERS

   -- GET REPORT'S DATA

OPEN PV_REFCURSOR
FOR
select SE.* , nvl(SP.CURRENT_MATCHED_PRICE,0) CURRENT_PRICE
from
(
    select * from
    (
    SELECT SE.ACCTNO, AF.ACCTNO AFACCTNO, CF.CUSTODYCD, SE.TXDATE TXDATE, SB.SYMBOL SYMBOL,
        SE.PREVQTTY, PREVCOSTPRICE, BUYQTTY, BUYAMT, BUYFEE, RIGHTQTTY, RIGHTAMT,
        (DIVIDENDSHARES + BONUSQTTY) BONUSQTTY, BONUSAMT, SELLQTTY, SELLAMT, SE.COSTPRICE,
        PROVRIGHTQTTY, (PROVDIVIDENDSHARES+PROVBONUSQTTY) PROVBONUSQTTY, SEDTL.PROVRIGHTAMT, SEDTL.PROVBONUSAMT

    FROM SECOSTPRICE SE, SECOSTPRICEDTL SEDTL, SBSECURITIES SB, semast mst,
        AFMAST AF, CFMAST CF
    WHERE SE.ACCTNO = SEDTL.ACCTNO
        AND SE.TXDATE = SEDTL.TXDATE
        AND mst.codeid = SB.CODEID
        and se.acctno = mst.acctno
        AND AF.CUSTID = CF.CUSTID
        AND mst.afACCTNO = AF.ACCTNO
        AND ( BUYQTTY > 0 OR
              RIGHTQTTY > 0 OR
              BONUSQTTY > 0 OR
              SELLQTTY  > 0 OR
              PROVRIGHTQTTY  > 0 OR
              PROVBONUSQTTY  > 0 OR
              PROVDIVIDENDSHARES > 0 OR
              DIVIDENDSHARES > 0
            )
        AND SB.SYMBOL LIKE V_STRSYMBOL
        AND AF.ACCTNO LIKE V_STRCIACCTNO
        AND CF.CUSTODYCD LIKE V_STRCUSTODYCD
        AND SE.TXDATE BETWEEN V_FROM_DATE AND V_TO_DATE
    )
) SE,
(
    SELECT SYMBOL, TRADING_DATE, CURRENT_MATCHED_PRICE
    FROM PB_SECURITIES
    UNION ALL
    SELECT SYMBOL, TRADING_DATE, CURRENT_MATCHED_PRICE
    FROM PB_SECURITIES_HIST
) SP
where SE.SYMBOL = SP.SYMBOL(+)
    AND SE.TXDATE = SP.TRADING_DATE(+)
ORDER BY SE.TXDATE
;

EXCEPTION
   WHEN OTHERS
   THEN
      RETURN;
END;                                                              -- PROCEDURE
 
 
/
