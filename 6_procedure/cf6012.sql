SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE cf6012 (
   PV_REFCURSOR           IN OUT   PKG_REPORT.REF_CURSOR,
   OPT                    IN       VARCHAR2,
   BRID                   IN       VARCHAR2,
   F_DATE                 IN       VARCHAR2, /*TU NGAY */
   T_DATE                 IN       VARCHAR2, /*DEN NGAY */
   REPORT_NO              IN       VARCHAR2, -- SO CHUNG TU
   PV_CUSTODYCD           IN       VARCHAR2, /*SO TK LUU KY */
   P_SYMBOL               IN       VARCHAR2, -- CHUNG KHOAN
   P_SHARESOUTTYP         IN       VARCHAR2, -- KL LUU HANH
   P_SIGNUSER             IN       VARCHAR2 -- NGUOI KY
   )
IS
    -- GIAY DANG KY MA SO GIAO DICH
    -- PERSON      DATE                 COMMENTS
    -- ---------   ------               -------------------------------------------
    -- TRUONGLD    18-10-2019           CREATED
    V_STROPTION    VARCHAR2 (5);       -- A: ALL; B: BRANCH; S: SUB-BRANCH
    V_STRBRID      VARCHAR2 (4);       -- USED WHEN V_NUMOPTION > 0

    V_FROMDATE          DATE;
    V_TODATE            DATE;
    V_CURRDATE          DATE;
    V_NEXTDATE          DATE;
    V_CUSTODYCD         VARCHAR2(20);
    V_SYMBOL            VARCHAR2(50);
    V_BRADDRESS         VARCHAR2(200);
    V_BRADDRESS_EN      VARCHAR2(200);
    V_HEADOFFICE        VARCHAR2(200);
    V_HEADOFFICE_EN     VARCHAR2(200);
    V_EMAIL             VARCHAR2(200);
    V_PHONE             VARCHAR2(200);
    V_FAX               VARCHAR2(200);
    V_1IDCODE           VARCHAR2(200);
    V_1OFFICE           VARCHAR2(200);
    V_1REFNAME          VARCHAR2(200);
    V_2IDCODE           VARCHAR2(200);
    V_2OFFICE           VARCHAR2(200);
    V_2REFNAME          VARCHAR2(200);
    V_BUSSINESSID       VARCHAR2(200);
    -- TY LE SO HUU CO DONG LON
    V_MAJORSHAREHOLDER  NUMBER(20,4);
    V_CLEARDAY          NUMBER;
    V_AMCID             VARCHAR2(200);
    V_FRPREVDATE        DATE;
BEGIN

   V_STROPTION := OPT;

   V_CURRDATE   := GETCURRDATE;

    IF V_STROPTION = 'A' THEN
        V_STRBRID := '%';
    ELSIF V_STROPTION = 'B' THEN
        V_STRBRID := SUBSTR(BRID,1,2) || '__' ;
    ELSE
        V_STRBRID:=BRID;
    END IF;

    V_CUSTODYCD := REPLACE(PV_CUSTODYCD,'.','');
    BEGIN
    SELECT AMCID INTO V_AMCID FROM CFMAST WHERE CUSTODYCD= V_CUSTODYCD;
    EXCEPTION
      WHEN OTHERS
       THEN V_AMCID := '';
    END;

    V_FROMDATE  :=     TO_DATE(F_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    V_TODATE    :=     TO_DATE(T_DATE, SYSTEMNUMS.C_DATE_FORMAT);
    V_FRPREVDATE := GETPREVDATE(V_FROMDATE,1);
    V_NEXTDATE  := GETPDATE_NEXT(V_FROMDATE,2);

    SELECT MAX(CASE WHEN  VARNAME='BRADDRESS' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='BRADDRESS_EN' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='HEADOFFICE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='HEADOFFICE_EN' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='EMAIL' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='PHONE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='FAX' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='MAJORSHAREHOLDER' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='CLEARDAY' THEN VARVALUE ELSE '' END)
       INTO V_BRADDRESS,V_BRADDRESS_EN,V_HEADOFFICE,V_HEADOFFICE_EN,V_EMAIL,V_PHONE,V_FAX, V_MAJORSHAREHOLDER, V_CLEARDAY
    FROM SYSVAR WHERE VARNAME IN ('BRADDRESS','BRADDRESS_EN','HEADOFFICE','HEADOFFICE_EN','EMAIL','PHONE','FAX', 'MAJORSHAREHOLDER', 'CLEARDAY');

    SELECT MAX(CASE WHEN  VARNAME='1IDCODE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='1OFFICE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='1REFNAME' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='2IDCODE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='2OFFICE' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='2REFNAME' THEN VARVALUE ELSE '' END),
           MAX(CASE WHEN  VARNAME='BUSSINESSID' THEN VARVALUE ELSE '' END)
        INTO V_1IDCODE, V_1OFFICE, V_1REFNAME, V_2IDCODE, V_2OFFICE, V_2REFNAME, V_BUSSINESSID
    FROM SYSVAR WHERE VARNAME IN ('1IDCODE','1OFFICE','1REFNAME','2IDCODE','2OFFICE','2REFNAME','BUSSINESSID');


OPEN PV_REFCURSOR FOR
    SELECT -- THONG TIN HSV
           V_HEADOFFICE HEADOFFICE,
           V_HEADOFFICE_EN HEADOFFICE_EN,
           V_BRADDRESS BRADDRESS,
           V_BRADDRESS_EN BRADDRESS_EN,
           V_EMAIL EMAIL,
           V_PHONE PHONE,
           V_FAX FAX,
           V_BUSSINESSID BUSSINESSID,
           REPORT_NO AS CT, --SO CHUNG TU
           -- THONG TIN NGUOI DAI DIEN
           CASE WHEN P_SIGNUSER ='002' THEN V_1REFNAME ELSE V_2REFNAME  END REFNAME,
           CASE WHEN P_SIGNUSER ='002' THEN V_1OFFICE  ELSE V_2OFFICE  END OFFICE,
           CASE WHEN P_SIGNUSER ='002' THEN V_1IDCODE  ELSE V_2IDCODE  END IDCODE,
           V_1REFNAME REFNAME1,
           V_2REFNAME REFNAME2,
           V_FROMDATE REPORTDATE,
           MST.CUSTODYCD,
           MST.SYMBOL,
           MST.ISSFULLNAME,
           MST.EN_ISSFULLNAME,
           MST.EXCHANGES,
           MST.EN_EXCHANGES, MST.LISTINGQTTY
    FROM (
        SELECT CF.CUSTODYCD, SB.SYMBOL, SB.ISSFULLNAME, SB.EN_ISSFULLNAME,
               SB.EXCHANGES, SB.EN_EXCHANGES, SB.LISTINGQTTY,
               -- KL CK CUOI NGAY FROM DATE
               (CASE WHEN SE.CUSTATCOM = 'Y' THEN SE.TRADE + SE.RECEIVING - NVL(TR.NAMT,0) ELSE SE.TRADE END) ENDQTTY
        FROM CFMAST CF,
        (
            SELECT SE.ACCTNO, SE.AFACCTNO, SE.CODEID, SE.CUSTID, SE.TRADE, SE.RECEIVING, SE.MORTAGE, SE.BLOCKED, SE.EMKQTTY, CF.CUSTATCOM
            FROM SEMAST SE, CFMAST CF
            WHERE SE.CUSTID = CF.CUSTID
            AND CF.CUSTATCOM = 'Y'
            UNION ALL
            SELECT SE.ACCTNO, SE.AFACCTNO, SE.CODEID, SE.CUSTID, SUM(CASE WHEN SE.TXDATE = V_NEXTDATE THEN SE.TRADE ELSE 0 END) TRADE, SE.RECEIVING, SE.MORTAGE, SE.BLOCKED, SE.EMKQTTY, CF.CUSTATCOM
            FROM SENOCUSTATCOM SE, CFMAST CF
            WHERE SE.CUSTID = CF.CUSTID
            AND CF.CUSTATCOM = 'N'
            AND TXDATE BETWEEN V_FRPREVDATE AND V_NEXTDATE
            GROUP BY SE.ACCTNO, SE.AFACCTNO, SE.CODEID, SE.CUSTID, SE.RECEIVING, SE.MORTAGE, SE.BLOCKED, SE.EMKQTTY, CF.CUSTATCOM
        ) SE,
        (
            SELECT SB.CODEID, SB.SYMBOL,
                   ISS.FULLNAME ISSFULLNAME, -- TEN TCPH
                   ISS.EN_FULLNAME EN_ISSFULLNAME, -- TEN TA TCPH
                   A1.CDCONTENT EXCHANGES,          -- TEN SO GDCK
                   A1.EN_CDCONTENT  EN_EXCHANGES,   -- TEN TA SO GDCK
                   SI.LISTINGQTTY                   -- KL NIEM YET
            FROM ISSUERS ISS, SBSECURITIES SB, ALLCODE A1, (
                SELECT CODEID, SUM(CASE WHEN P_SHARESOUTTYP='O' THEN OLDCIRCULATINGQTTY ELSE NEWCIRCULATINGQTTY END) LISTINGQTTY
                FROM VW_SECURITIES_INFO_HIST
                WHERE SYMBOL LIKE P_SYMBOL
                AND HISTDATE BETWEEN V_FRPREVDATE AND V_FROMDATE
                GROUP BY CODEID
            ) SI
            WHERE ISS.ISSUERID = SB.ISSUERID
            AND SB.TRADEPLACE = A1.CDVAL AND A1.CDNAME='EXCHANGES'
            AND SB.CODEID = SI.CODEID (+)
            AND SB.SYMBOL = P_SYMBOL
        )SB,
        -- PHAT SINH TU FROM DATE
        (
            SELECT CUSTODYCD, ACCTNO, SYMBOL, SUM(CASE WHEN  TXTYPE='C' THEN NAMT ELSE -NAMT END) NAMT
            FROM VW_SETRAN_GEN
            WHERE TXDATE > V_FROMDATE AND FIELD IN ('TRADE','RECEIVING')
            AND SYMBOL LIKE P_SYMBOL||'%'
            GROUP BY CUSTODYCD, ACCTNO, SYMBOL
        )TR,
        -- PHAT SINH NGAY V_PREVDATE TK CUSTATCOM = 'N'
        (
            SELECT ACCTNO, TRADE FROM SENOCUSTATCOM WHERE TXDATE = V_FRPREVDATE
        ) SENO_PREV
        WHERE CF.CUSTID = SE.CUSTID
        AND SE.CODEID = SB.CODEID
        AND (CF.CUSTODYCD = V_CUSTODYCD OR CF.AMCID = V_AMCID)
        AND CF.STATUS <> 'C'
        AND SUBSTR(CF.CUSTODYCD,0,3) <> 'OTC'
        AND SE.ACCTNO = TR.ACCTNO (+)
        AND SE.ACCTNO = SENO_PREV.ACCTNO (+)
    )MST ORDER BY MST.CUSTODYCD;

EXCEPTION
  WHEN OTHERS
   THEN
      PLOG.ERROR ('CF6012: ' || SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
      RETURN;
END;
/
